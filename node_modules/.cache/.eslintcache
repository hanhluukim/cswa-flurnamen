[{"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/index.js":"1","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reportWebVitals.js":"2","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/App.js":"3","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Home.js":"4","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Profile.js":"5","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Register.js":"6","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/helpers/history.js":"7","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Login.js":"8","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/actions/message.js":"9","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/actions/auth.js":"10","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/actions/types.js":"11","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/services/user.service.js":"12","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/services/auth.service.js":"13","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/store.js":"14","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reducers/index.js":"15","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reducers/message.js":"16","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reducers/auth.js":"17","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Project.js":"18","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Accordion.js":"19","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Flurnamen.js":"20","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Gallery.js":"21","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Search.js":"22","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Erfassung.js":"23","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/apis/get.service.js":"24","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Modal.js":"25","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Literatur.js":"26","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Datenbank.js":"27","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/index.js":"28","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/App.js":"29","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reportWebVitals.js":"30","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/store.js":"31","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Register.js":"32","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Home.js":"33","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Login.js":"34","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Flurnamen.js":"35","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Project.js":"36","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Erfassung.js":"37","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Gallery.js":"38","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Profile.js":"39","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Literatur.js":"40","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Search.js":"41","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/actions/message.js":"42","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Datenbank.js":"43","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/helpers/history.js":"44","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/actions/auth.js":"45","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reducers/index.js":"46","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Accordion.js":"47","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Modal.js":"48","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/actions/types.js":"49","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/services/user.service.js":"50","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/services/auth.service.js":"51","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/apis/get.service.js":"52","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reducers/auth.js":"53","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reducers/message.js":"54","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/index.js":"55","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/App.js":"56","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reportWebVitals.js":"57","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/store.js":"58","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Login.js":"59","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Project.js":"60","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Flurnamen.js":"61","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Register.js":"62","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Home.js":"63","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Profile.js":"64","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Erfassung.js":"65","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Gallery.js":"66","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Search.js":"67","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Literatur.js":"68","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Datenbank.js":"69","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/actions/auth.js":"70","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/actions/message.js":"71","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/helpers/history.js":"72","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reducers/index.js":"73","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Accordion.js":"74","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Modal.js":"75","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/actions/types.js":"76","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/apis/get.service.js":"77","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/services/auth.service.js":"78","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reducers/auth.js":"79","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reducers/message.js":"80"},{"size":562,"mtime":1616271591358,"results":"81","hashOfConfig":"82"},{"size":362,"mtime":1616110975680,"results":"83","hashOfConfig":"82"},{"size":4968,"mtime":1616293739779,"results":"84","hashOfConfig":"82"},{"size":10224,"mtime":1616290966605,"results":"85","hashOfConfig":"82"},{"size":892,"mtime":1616174508623,"results":"86","hashOfConfig":"82"},{"size":4388,"mtime":1616296833733,"results":"87","hashOfConfig":"82"},{"size":95,"mtime":1616111919122,"results":"88","hashOfConfig":"82"},{"size":3392,"mtime":1616176486594,"results":"89","hashOfConfig":"82"},{"size":206,"mtime":1616111324882,"results":"90","hashOfConfig":"82"},{"size":1355,"mtime":1616237160589,"results":"91","hashOfConfig":"82"},{"size":304,"mtime":1616111327014,"results":"92","hashOfConfig":"82"},{"size":501,"mtime":1616289861127,"results":"93","hashOfConfig":"82"},{"size":3359,"mtime":1616160236948,"results":"94","hashOfConfig":"82"},{"size":340,"mtime":1616111547121,"results":"95","hashOfConfig":"82"},{"size":157,"mtime":1616111444593,"results":"96","hashOfConfig":"82"},{"size":353,"mtime":1616111429573,"results":"97","hashOfConfig":"82"},{"size":1091,"mtime":1616174506371,"results":"98","hashOfConfig":"82"},{"size":7006,"mtime":1616171462533,"results":"99","hashOfConfig":"82"},{"size":2371,"mtime":1616171534828,"results":"100","hashOfConfig":"82"},{"size":7126,"mtime":1616173468180,"results":"101","hashOfConfig":"82"},{"size":762,"mtime":1616173528863,"results":"102","hashOfConfig":"82"},{"size":5944,"mtime":1616281198926,"results":"103","hashOfConfig":"82"},{"size":7854,"mtime":1616300126157,"results":"104","hashOfConfig":"82"},{"size":4345,"mtime":1616287454985,"results":"105","hashOfConfig":"82"},{"size":2592,"mtime":1616282569388,"results":"106","hashOfConfig":"82"},{"size":3766,"mtime":1616291707546,"results":"107","hashOfConfig":"82"},{"size":2181,"mtime":1616292440508,"results":"108","hashOfConfig":"82"},{"size":562,"mtime":1616271591000,"results":"109","hashOfConfig":"110"},{"size":5832,"mtime":1617013782192,"results":"111","hashOfConfig":"110"},{"size":362,"mtime":1616110975000,"results":"112","hashOfConfig":"110"},{"size":340,"mtime":1616111547000,"results":"113","hashOfConfig":"110"},{"size":4739,"mtime":1616354674639,"results":"114","hashOfConfig":"110"},{"size":4835,"mtime":1617013892550,"results":"115","hashOfConfig":"110"},{"size":3618,"mtime":1616355192560,"results":"116","hashOfConfig":"110"},{"size":7128,"mtime":1617013839927,"results":"117","hashOfConfig":"110"},{"size":7173,"mtime":1617013969017,"results":"118","hashOfConfig":"110"},{"size":9046,"mtime":1617013818387,"results":"119","hashOfConfig":"110"},{"size":762,"mtime":1616173528000,"results":"120","hashOfConfig":"110"},{"size":1049,"mtime":1616354939193,"results":"121","hashOfConfig":"110"},{"size":3766,"mtime":1616291707000,"results":"122","hashOfConfig":"110"},{"size":9903,"mtime":1617050896969,"results":"123","hashOfConfig":"110"},{"size":206,"mtime":1616353845450,"results":"124","hashOfConfig":"110"},{"size":2181,"mtime":1616355421446,"results":"125","hashOfConfig":"110"},{"size":95,"mtime":1616111919000,"results":"126","hashOfConfig":"110"},{"size":1927,"mtime":1616353919707,"results":"127","hashOfConfig":"110"},{"size":157,"mtime":1616111444000,"results":"128","hashOfConfig":"110"},{"size":2371,"mtime":1616355438277,"results":"129","hashOfConfig":"110"},{"size":4661,"mtime":1617040471050,"results":"130","hashOfConfig":"110"},{"size":304,"mtime":1616111327000,"results":"131","hashOfConfig":"110"},{"size":501,"mtime":1616289861000,"results":"132","hashOfConfig":"110"},{"size":3419,"mtime":1617014112235,"results":"133","hashOfConfig":"110"},{"size":10801,"mtime":1617046920337,"results":"134","hashOfConfig":"110"},{"size":1091,"mtime":1616174506000,"results":"135","hashOfConfig":"110"},{"size":353,"mtime":1616111429000,"results":"136","hashOfConfig":"110"},{"size":562,"mtime":1616271591000,"results":"137","hashOfConfig":"138"},{"size":5832,"mtime":1617013782000,"results":"139","hashOfConfig":"138"},{"size":362,"mtime":1616110975000,"results":"140","hashOfConfig":"138"},{"size":340,"mtime":1616111547000,"results":"141","hashOfConfig":"138"},{"size":3618,"mtime":1616355192000,"results":"142","hashOfConfig":"138"},{"size":7173,"mtime":1617013969000,"results":"143","hashOfConfig":"138"},{"size":7128,"mtime":1617013839000,"results":"144","hashOfConfig":"138"},{"size":4739,"mtime":1616354674000,"results":"145","hashOfConfig":"138"},{"size":4835,"mtime":1617013892000,"results":"146","hashOfConfig":"138"},{"size":1049,"mtime":1616354939000,"results":"147","hashOfConfig":"138"},{"size":9046,"mtime":1617013818000,"results":"148","hashOfConfig":"138"},{"size":762,"mtime":1616173528000,"results":"149","hashOfConfig":"138"},{"size":9903,"mtime":1617050896000,"results":"150","hashOfConfig":"138"},{"size":3766,"mtime":1616291707000,"results":"151","hashOfConfig":"138"},{"size":2181,"mtime":1616355421000,"results":"152","hashOfConfig":"138"},{"size":1927,"mtime":1616353919000,"results":"153","hashOfConfig":"138"},{"size":206,"mtime":1616353845000,"results":"154","hashOfConfig":"138"},{"size":95,"mtime":1616111919000,"results":"155","hashOfConfig":"138"},{"size":157,"mtime":1616111444000,"results":"156","hashOfConfig":"138"},{"size":2371,"mtime":1616355438000,"results":"157","hashOfConfig":"138"},{"size":4661,"mtime":1617040471000,"results":"158","hashOfConfig":"138"},{"size":304,"mtime":1616111327000,"results":"159","hashOfConfig":"138"},{"size":10801,"mtime":1617046920000,"results":"160","hashOfConfig":"138"},{"size":3419,"mtime":1617014112000,"results":"161","hashOfConfig":"138"},{"size":1091,"mtime":1616174506000,"results":"162","hashOfConfig":"138"},{"size":353,"mtime":1616111429000,"results":"163","hashOfConfig":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"173035b",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"166"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"166"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"166"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"166"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"166"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"166"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"166"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"166"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"166"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"166"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"1nvx918",{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"236"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"236"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"236"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"236"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"236"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"236"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"236"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cpgtcy",{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/index.js",[],["348","349"],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reportWebVitals.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/App.js",["350","351","352"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\n  MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Project from \"./components/Project\";\nimport Flurnamen from \"./components/Flurnamen\";\nimport Erfassung from \"./components/Erfassung\";\nimport Profile from \"./components/Profile\";\nimport Search from \"./components/Search\";\n\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from \"./helpers/history\";\nimport Gallery from \"./components/Gallery\";\nimport Literatur from \"./components/Literatur\";\nimport DBGrundlagen from \"./components/Datenbank\";\n\n//========================\n\nconst App = () => {\n  \n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n    }\n  }, [currentUser]);\n\n  const logOut = () => {\n    dispatch(logout());\n  };\n\n\n  //Navigation für kleine Geräten\n  const [isOpen, setMenuState] = useState(false);\n\n  function toggleCollapse(){\n    setMenuState(!isOpen)\n  }\n  \n  //========================\n  return (\n    <Router history={history}>\n      <div>\n      <MDBNavbar color=\"green\" dark expand=\"md\">\n        <MDBNavbarToggler onClick={() => setMenuState(toggleCollapse)} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem active>\n              <MDBNavLink to=\"/\">Home</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/flurnamen\">Flurnamen</MDBNavLink>\n            </MDBNavItem>\n            \n            <MDBNavItem>\n              <MDBNavLink to=\"/literatur\">Literatur</MDBNavLink>\n            </MDBNavItem>\n\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret>\n                  <div className=\"d-none d-md-inline\">Projekt</div>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu className=\"dropdown-default\">\n                  <MDBDropdownItem href=\"/projekt\">Details</MDBDropdownItem>\n                  <MDBDropdownItem href=\"/gallerie\">Gallerie</MDBDropdownItem>\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n            <MDBNavItem>\n              <MDBNavLink to=\"/suche\">Datensuche</MDBNavLink>\n            </MDBNavItem>\n\n            \n\n            {currentUser && (\n              <MDBNavItem>\n                <MDBNavLink to=\"/erfassung\">Datenerfassung</MDBNavLink>\n              </MDBNavItem>\n            )}\n\n          </MDBNavbarNav>\n          \n\n\n              {currentUser ? (\n\n                <MDBNavbarNav right>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/profile\">{currentUser.username}</MDBNavLink>\n                    </MDBNavItem>\n                    <MDBNavItem>\n                        <MDBNavLink to=\"/anmeldung\" onClick={logOut}>Abmeldung</MDBNavLink>\n                    </MDBNavItem>\n                </MDBNavbarNav>        \n              ) : (\n\n                <MDBNavbarNav right>\n                  <MDBNavItem>\n                      <MDBNavLink to=\"/anmeldung\">Anmeldung</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                      <MDBNavLink to=\"/registerierung\">Registerierung</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              )}\n        </MDBCollapse>\n      </MDBNavbar>\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path={[\"/\", \"/projekt\"]} component={Project} />\n            <Route exact path={[\"/\", \"/datenbank\"]} component={DBGrundlagen} />\n            <Route exact path={[\"/\", \"/suche\"]} component={Search} />\n            <Route exact path={[\"/\", \"/erfassung\"]} component={Erfassung} />\n            <Route exact path={[\"/\", \"/gallerie\"]} component={Gallery} />\n            <Route exact path={[\"/\", \"/flurnamen\"]} component={Flurnamen} />\n            <Route exact path={[\"/\", \"/literatur\"]} component={Literatur} />\n            <Route exact path=\"/anmeldung\" component={Login} />\n            <Route exact path=\"/registerierung\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Home.js",["353","354","355","356"],"import React, { useState, useEffect, Component } from \"react\";\n\nimport { MDBCard, MDBCardTitle, MDBBtn, MDBRow, MDBCol, MDBIcon, MDBContainer } from 'mdbreact';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\n\nimport UserService from \"../services/user.service\";\n\nconst Home = () => {\n  /*\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n   \n    var getcontent=UserService.getPublicContent();\n    console.log(getcontent.data);\n    setContent(getcontent);\n\n  }, []);\n  */\n\n  return (\n    /*\n    die Seite (als ein Row) wird zu 2 Teile zerlegt: project-card und other-cards\n    project-card erhält nur eine Karte\n    other-cards erhält 4 Spalte. Diese 4 Spalte wird aber weiter so in 2 Zeile verteilt.\n    */\n    <div class=\"d-flex justify-content-center\" className=\"homepage-cards\">\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"3\">\n                  <MDBCard\n                    >\n                      <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n                        <div>\n                          <h5 className='green-text'>\n                            <MDBIcon icon='database' /> Datenbank\n                          </h5>\n                          <a className=\"card-link\" href=\"/suche\">\n                            <MDBBtn color='green'>\n                              <MDBIcon icon='search' /> \n                              Datensuche\n                            </MDBBtn>\n                          </a>\n                        </div>\n                      </div>\n                    </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"6\">\n                  <MDBCard>\n          <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n            <div>\n              <h5 className='green-text'>\n                <MDBIcon icon='archive' /> Projekt und Archiv\n              </h5>\n              <MDBCardTitle tag='h3' className='pt-2'>\n                <strong>Thüringische Flurnamen</strong>\n              </MDBCardTitle>\n              <p style={{textAlign:'justify'}}>\n                Das Projekt befasst sich mit der Digitalisierung \n                und Aufbereitung der Belegsammlung des \n                Thüringischen Flurnamenarchivs der \n                Friedrich-Schiller-Universität Jena. \n                Dabei werden die Belegzettel des \n                Archivs digitalisiert und die den Fluren\n                übergeordneten Orte mit der zugehörigen\n                Orts-ID der Gemeinsamen Normdatei (GND) \n                der Deutschen Nationalbibliothek verknüpft.\n                Das Datenmaterial präsentiert die Gemarkungen \n                in OpenStreetMap. Durch die Digitalisierung \n                des Thüringischen Flurnamenarchivs und die \n                Verknüpfung mit GND-Daten wird eine weitere \n                Befassung mit den Flurnamen Thüringens möglich, \n                sowohl für Laien als auch Wissenschaftler \n                verschiedenster Bereiche.\n              </p>\n              <a className=\"card-link\" href=\"/projekt\">\n                <MDBBtn color='green'>\n                  <MDBIcon icon='clone left' /> \n                  Mehr erfahren\n                </MDBBtn>\n              </a>\n            </div>\n          </div>\n        </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"3\">\n                  <MDBCard>\n                      <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n                        <div>\n                          <h5 className='green-text'>\n                            <MDBIcon icon='chart-pie' /> Flurnamen\n                          </h5>\n                          \n                          <a className=\"card-link\" href=\"/flurnamen\">\n                              <MDBBtn color='green'>\n                                <MDBIcon icon='clone left' /> \n                                Mehr erfahren\n                              </MDBBtn>\n                            </a>\n                        </div>\n                      </div>\n                  </MDBCard>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    {/*\n     <MDBRow center>\n      <MDBCol md='5' className=\"project-card\">\n        <MDBCard>\n          <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n            <div>\n              <h5 className='green-text'>\n                <MDBIcon icon='archive' /> Projekt und Archiv\n              </h5>\n              <MDBCardTitle tag='h3' className='pt-2'>\n                <strong>Thüringische Flurnamen</strong>\n              </MDBCardTitle>\n              <p style={{textAlign:'justify'}}>\n                Das Projekt befasst sich mit der Digitalisierung \n                und Aufbereitung der Belegsammlung des \n                Thüringischen Flurnamenarchivs der \n                Friedrich-Schiller-Universität Jena. \n                Dabei werden die Belegzettel des \n                Archivs digitalisiert und die den Fluren\n                übergeordneten Orte mit der zugehörigen\n                Orts-ID der Gemeinsamen Normdatei (GND) \n                der Deutschen Nationalbibliothek verknüpft.\n                Das Datenmaterial präsentiert die Gemarkungen \n                in OpenStreetMap. Durch die Digitalisierung \n                des Thüringischen Flurnamenarchivs und die \n                Verknüpfung mit GND-Daten wird eine weitere \n                Befassung mit den Flurnamen Thüringens möglich, \n                sowohl für Laien als auch Wissenschaftler \n                verschiedenster Bereiche.\n              </p>\n              <a className=\"card-link\" href=\"/projekt\">\n              <MDBBtn color='green'>\n                <MDBIcon icon='clone left' /> \n                Mehr erfahren\n              </MDBBtn>\n              </a>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n\n\n      <MDBCol md='5' className=\"other-cards\">    \n          <MDBRow center>\n            {/*}\n                  <MDBCol md='5'>\n                    <MDBCard\n                    >\n                      <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n                        <div>\n                          <h5 className='green-text'>\n                            <MDBIcon icon='archive' /> Flurnamenarchiv\n                          </h5>\n                          <MDBCardTitle tag='h3' className='pt-2'>\n                            <strong>Das Archiv</strong>\n                          </MDBCardTitle>\n                          <p style={{textAlign:'justify'}}>\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                            Repellat fugiat, laboriosam, voluptatem, optio vero odio nam sit\n                            officia accusamus minus error nisi architecto nulla ipsum\n                            dignissimos. Odit sed qui, dolorum!\n                          </p>\n                          <MDBBtn color='green'>\n                            <MDBIcon icon='clone left' /> Mehr erfahren\n                          </MDBBtn>\n                        </div>\n                      </div>\n                    </MDBCard>\n                  </MDBCol>\n  \n                  <MDBCol md='5'>\n                    <MDBCard\n                    >\n                      <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n                        <div>\n                          <h5 className='green-text'>\n                            <MDBIcon icon='database' /> Datenbank\n                          </h5>\n                          {/*\n                          <MDBCardTitle tag='h3' className='pt-2'>\n                            <strong>Grundlagen</strong>\n                          </MDBCardTitle>\n                          <p>\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                            Repellat fugiat, laboriosam, voluptatem, optio vero odio nam sit\n                            officia accusamus minus error nisi architecto nulla ipsum\n                            dignissimos. Odit sed qui, dolorum!\n                          </p>\n                          \n                          <MDBBtn color='green'>\n                            <MDBIcon icon='search' /> Datensuche\n                          </MDBBtn>\n                        </div>\n                      </div>\n                    </MDBCard>\n                  </MDBCol>\n                  \n                  <MDBCol md='5'>\n                    <MDBCard\n                      \n                    >\n                      <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n                        <div>\n                          <h5 className='green-text'>\n                            <MDBIcon icon='images' /> Galerien\n                          </h5>\n                          <MDBBtn color='green'>\n                            <MDBIcon icon='clone left' /> Mehr erfahren\n                          </MDBBtn>\n                        </div>\n                      </div>\n                    </MDBCard>\n                  </MDBCol>\n                  \n                  <MDBCol md='5'>\n                    <MDBCard\n                      \n                    >\n                      <div className='text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4'>\n                        <div>\n                          <h5 className='green-text'>\n                            <MDBIcon icon='chart-pie' /> Kontakte und Partner\n                          </h5>\n                          \n                          <MDBBtn color='green'>\n                            <MDBIcon icon='clone left' /> Mehr erfahren\n                          </MDBBtn>\n                        </div>\n                      </div>\n                    </MDBCard>\n                  </MDBCol>\n  \n          </MDBRow>\n      </MDBCol>\n          \n     </MDBRow> \n               \n    */}\n    </div>\n  )\n};\n\nexport default Home;\n\n","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Profile.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Register.js",["357"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { register } from \"../actions/auth\";\n\nimport {\n  MDBBtn\n} from \"mdbreact\";\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Eingabepflicht!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Keine gültige E-Mail.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Nutzernamen muss zwischen 3 und 20 lang sein.\n        \n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Passwort muss zwischen 6 und 40 lang sein.\n      </div>\n    );\n  }\n};\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(register(username, email, password))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Benutzername</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Passwort</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              \n              <div className=\"form-group\">\n                <button className=\"btn btn-success btn-block\">Registerierung</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/helpers/history.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Login.js",["358"],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n\n\n\n//COMPONENTS\nimport {\n  MDBBtn\n} from \"mdbreact\";\n\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Eingabepflicht!\n      </div>\n    );\n  }\n};\n\nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(login(username, password))\n        .then(() => {\n          props.history.push(\"/profile\");\n          //window.location.reload();\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Benutzername</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Passwort</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n\n          \n\n          <div className=\"form-group\">\n            <button style={{backgroundColor:'green'}}className=\"btn btn-success btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n          \n          \n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/actions/message.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/actions/auth.js",["359","360"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n  var response = AuthService.register(username, email, password);\n  console.log(response);\n  if (response.status==200){\n    dispatch({\n      type: REGISTER_SUCCESS,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message,\n    });\n    return Promise.resolve();\n  }\n  else{\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message,\n    });\n    return Promise.reject();\n  }\n};\n\nexport const login = (username, password) => (dispatch) => {\n\n  var resp = AuthService.login(username, password);\n\n  if (resp.data.message==\"success\"){\n    console.log(\"Action\");\n    console.log(resp.data.auth.user);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: { user: resp.data.auth.user},\n    });\n\n    return Promise.resolve();\n\n  }\n  else{\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: resp.data.message,\n    });\n\n    return Promise.reject();\n\n  };\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/actions/types.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/services/user.service.js",["361"],"\n\nconst m_account = {id:1, username:\"Hanh\", password:\"hanhhanh\", email:\"hanh@gmail.com\",roles:['ROLE_USER']}\n\nvar resp={\n  data:{\n    auth:{\n      user:{\n        id:m_account.id, \n        username: m_account.username, \n        email: m_account.email, \n        roles:m_account.roles\n      }\n    },\n    message:\"success\"\n  }\n}\n\nconst getPublicContent = () => {\n  return \"Hallo Public Content\"\n};\n\nconst getUserBoard = () => {\n  return resp.data\n};\n\nexport default {\n  getPublicContent,\n  getUserBoard\n};","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/services/auth.service.js",["362","363","364","365"],"import axios from \"axios\";\n\nconst m_account = {id:1, username:\"Hanh\", password:\"hanhhanh\", email:\"hanh@gmail.com\",roles:['ROLE_USER']}\n\n\nconst register = (username, email, password) => {\n  if (username!==\"Hanh\"){\n\n      var test_response={\n        // `data` is the response that was provided by the server\n        data: \n          {auth: {id:2, username:username, email:email}, message: 'erfolgreich registeriert'}\n        ,\n      \n        // `status` is the HTTP status code from the server response\n        status: 200,\n      \n        // `statusText` is the HTTP status message from the server response\n        statusText: 'OK',\n      \n        // `headers` the headers that the server responded with\n        // All header names are lower cased\n        headers: {'Content-Type': 'text/json'},\n      \n        // `config` is the config that was provided to `axios` for the request\n        config: {},\n      \n        // `request` is the request that generated this response\n        // It is the last ClientRequest instance in node.js (in redirects)\n        // and an XMLHttpRequest instance the browser\n        request: {}\n      };\n      \n      console.log(\"auth.service:\");\n      console.log(test_response);\n\n      return test_response;\n    }\n    else{\n\n      var error={\n        // `data` is the response that was provided by the server\n        data: \n          {auth: {id:2, username:username, email:email}, message: 'Nutzer existiert bereits'}\n        ,\n      \n        // `status` is the HTTP status code from the server response\n        status: 406,\n      \n        // `statusText` is the HTTP status message from the server response\n        statusText: 'Not accepted',\n      \n        // `headers` the headers that the server responded with\n        // All header names are lower cased\n        headers: {'Content-Type': 'text/json'},\n      \n        // `config` is the config that was provided to `axios` for the request\n        config: {},\n      \n        // `request` is the request that generated this response\n        // It is the last ClientRequest instance in node.js (in redirects)\n        // and an XMLHttpRequest instance the browser\n        request: {}\n      };\n      \n      return error;\n\n    }\n      /*\n      return axios.post(API_URL + \"signup\", {\n        username,\n        email,\n        password,\n      });\n      */\n      \n};\n\nconst login = (username, password) => {\n\n  if (username==m_account.username && password== m_account.password){\n    var resp={\n      data:{\n        auth:{\n          user:{\n            id:m_account.id, \n            username: m_account.username, \n            email: m_account.email, \n            roles:m_account.roles\n          }\n        },\n        message:\"success\"\n      }\n    }\n    localStorage.setItem(\"user\", JSON.stringify(resp.data.auth.user));\n    return resp\n  }\n  else{\n    var error={\n      data:{\n        auth:{\n          user:{}\n        }, \n          message:\"Account existiert nicht\"}\n      }\n    return error\n  }\n  /*\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n    */\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/store.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reducers/index.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reducers/message.js",["366"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/reducers/auth.js",["367"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \n  const user = localStorage.getItem(\"user\");\n  console.log(\"====CURRENT USER=======\");\n  console.log(user);\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n        };\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }\n  ","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Project.js",["368"],"import React from \"react\";\nimport { render } from \"react-dom\";\nimport Accordion from \"./Accordion\";\nimport Table from 'react-bootstrap/Table'\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0\n    };\n  }\n  render() {\n    /**/\n    return (\n      <div className=\"flurnamen-accordion\">\n        <Accordion\n          className=\"accordion\"\n          selectedIndex={this.state.selectedIndex}\n          onChange={(index, expanded, selectedIndex) => console.log(`#${index} ${expanded ? 'expanded' : 'collapsed'} (selectedIndex: ${selectedIndex})`)}\n        >\n          <div data-header=\"Vorstellung des Projekts\" className=\"accordion-item\">\n                <p>\n                Das Projekt befasst sich mit der Digitalisierung und Aufbereitung der Belegsammlung des  \n                <strong>Thüringischen Flurnamenarchivs</strong> der Friedrich-Schiller-Universität Jena. Dabei werden die \n                Belegzettel des Archivs digitalisiert und die den Fluren übergeordneten Orte mit der \n                zugehörigen Orts-ID der Gemeinsamen Normdatei (GND) der Deutschen Nationalbibliothek verknüpft. \n                Das Datenmaterial präsentiert die Gemarkungen in OpenStreetMap. Durch die Digitalisierung des \n                Thüringischen Flurnamenarchivs und die Verknüpfung mit GND-Daten wird eine weitere Befassung mit den \n                Flurnamen Thüringens möglich, sowohl für Laien als auch Wissenschaftler verschiedenster Bereiche.\n                \n                Das Projekt wurde im Juni 2019 begonnen und wird voraussichtlich 2021 abgeschlossen. \n                Die Datenbank wird stetig aktualisiert, befindet sich aber noch im Aufbau.\n                </p>\n          </div>\n          <div data-header=\"Thüringisches Flurnamenarchiv\" className=\"accordion-item\">\n                <p>\n                    Das Thüringische Flurnamenarchiv wurde 1933 an der \n                    Friedrich-Schiller-Universität Jena im Rahmen der thüringischen Landesstelle \n                    für Volkskunde gegründet. Ab 1953 wuchs der Bestand rasch an, so dass sich \n                    heute für das Gebiet des Freistaats Thüringen knapp 126.000 Namenbelege finden. \n                    Diese sind aber bei Weitem nicht die Gesamtmenge an thüringischen Flurnamen, \n                    die Schätzungen zufolge bei über 300.000 Namen liegt. Insgesamt wurden im \n                    Flurnamenarchiv rund 150.000 Flurnamen erfasst, da man sich am thüringischen \n                    Sprachraum und nicht an der politischen Gliederung orientierte. \n                    Das Erfassungsgebiet umfasst somit auch Teile des südlichen Sachsen-Anhalts. \n                    Seit 1982 stagnierte die Arbeit am Thüringischen Flurnamenarchiv. \n                    Dies änderte sich mit der Übernahme der Professur für Geschichte \n                    der deutschen Sprache durch Prof. Dr. Eckhard Meineke im Jahr 1994, \n                    unter dessen Betreuung zahlreiche flurnamenkundliche Abschlussarbeiten \n                    verfasst wurden. Das im Flurnamenarchiv lagernde Material ist derzeit \n                    weder für die Wissenschaft noch für die interessierte Öffentlichkeit \n                    gut nutzbar – es ist vom Zerfall bedroht und befindet sich in Zettelkästen \n                    in der Obhut von Frau Dr. Barbara Aehnlich, die seit 2004 die \n                    Flurnamenforschung in Jena weiter vorantreibt. Die Belegsammlung \n                    des Thüringischen Flurnamenarchivs bildet den Grundstock für \n                    eine flächendeckende Sammlung und Auswertung der Thüringer Flurnamenlandschaft. \n                    Von dieser ist Aufschluss zu erwarten über die Herkunft und die Motivation der \n                    Namen sowie über die dialektgebundene Sprachgeschichte des ostmitteldeutschen Raumes. \n                    Ausgehend von diesem Grundstock, dessen Digitalisierung im Projekt vorgenommen wird, \n                    soll auch der übrige Flurnamenbestand des Freistaates erfasst und nach vorgegebenen \n                    Kriterien geordnet werden.\n                </p>\n          </div>\n            <div data-header=\"Partner\" className=\"accordion-item\">\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                        <th>Partner</th>\n                        <th>Beteiligte Arbeit</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                        \n                        <td>Thüringer Universitäts- und Landesbibliothek</td>\n                        <td>Entwicklung Datenbank und Portal</td>\n                       \n                        </tr>\n                        <tr>\n                       \n                        <td>Historische Kommission für Thüringen</td>\n                        <td>wissenschaftliche Beratung hinsichtlich Thüringer Regionalgeschichte</td>\n                       \n                        </tr>\n                        <tr>\n                        \n                        <td>Gemeinsamer Bibliotheksverbund (GBV)</td>\n                        <td></td>\n                        \n                        </tr>\n                        <tr>\n                        <td>Landesvermessungsamt Thüringen</td>\n                        <td>Bereitstellung des digitalen Kartenmaterials</td>\n                        </tr>\n                        <tr>\n                        <td>Heimatbund Thüringen e.V.</td>\n                        <td>Bereitstellung der Sammlungen ehrenamtlicher Mitarbeiter im Projekt <strong>Flurnamen und Regionalgeschichte</strong></td>\n                        </tr> \n\n                        <tr>\n                        <td>Thüringer Landesamt für Archäologie</td>\n                        <td></td>\n                        </tr>\n\n                        <tr>\n                        <td>digiCULT Verbund eG</td>\n                        <td></td>\n                        </tr>\n                        <tr>\n                        <td>DHnet | Jena</td>\n                        <td>Beratung bei DH-relevanten Fragen</td>\n                        </tr>\n                        <tr> \n                        <td>Michael Stifel Center Jena</td>\n                        <td>Beratung bei informationstechnologischen Fragestellungen</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n          <div data-header=\"Kontakt\" className=\"accordion-item\">\n            <p>\n            Dr. Barbara Aehnlich <br></br>\n            Friedrich-Schiller-Universität Jena <br></br>\n            Institut für Germanistische Sprachwissenschaft <br></br>\n            Fürstengraben 30<br></br>\n            07743 Jena \n            </p>\n          </div>\n        </Accordion>\n      </div>\n    );\n  }\n}\nexport default Project;\n","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Accordion.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Flurnamen.js",["369"],"import React from \"react\";\nimport { render } from \"react-dom\";\nimport Accordion from \"./Accordion\";\n\n\nclass Flurnamen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0\n    };\n  }\n  render() {\n    /**/\n    return (\n      <div className=\"flurnamen-accordion\"\n      style={{\n      }}>\n        <Accordion\n          className=\"accordion\"\n          selectedIndex={this.state.selectedIndex}\n          onChange={(index, expanded, selectedIndex) => console.log(`#${index} ${expanded ? 'expanded' : 'collapsed'} (selectedIndex: ${selectedIndex})`)}\n        >\n          <div\n            data-header=\"Allgemein\"\n            className=\"accordion-item\"\n          >\n            <p>\n            Flurnamen sind Bezeichnungen unbewohnter Örtlichkeiten und von Geländegegebenheiten,\n            an denen sich Menschen in der Landschaft orientieren.\n            Dies umfasst u.a. Berge und Täler, Bäche, Flüsse, Teiche und Seen, Wälder und Felder.\n            Eingeschlossen werden davon auch Namen, die heute infolge der Einbeziehung\n            ihrer Bezugsobjekte zu Bezeichnungen von Straßen, Gassen und Plätzen innerhalb einer Ortschaft geworden sind.\n            Nach dem Benennungsmotiv, also dem namengebenden Objekt oder der namengebenden Ursache, werden Flurnamen in Natur- und Kulturnamen unterteilt.\n            </p>\n          </div>\n          <div data-header=\"Naturflurnamen\" className=\"accordion-item\">\n            <p>\n            Naturnamen weisen auf die natürliche Beschaffenheit der unkultivierten Landschaft hin. Sie nehmen Bezug auf Gegebenheiten wie Berg und Tal, Wasser, Wald, Pflanzen, Tiere, Bodenbeschaffenheit usw. Hierher gehören beispielsweise Flurnamen, deren Motivation in der Ausdehnung und Begrenzung der von ihnen bezeichneten Flächen zu finden ist.\nDazu zählen Allgemeinbezeichnungen für Geländeteile (In den Talländern), für die allgemeine Gestalt der Grundstücke (Gehren, Haken) oder für ihre natürliche Lage (Im Himmelreich). Auch die Morphologie, also die Geländebeschaffenheit, spielt eine Rolle. Dies betrifft die Gruppe der Berge, Hügel, Bergteile und Hänge, ebene Flächen, Täler und Senken: Auf dem Berge, Am Hange, Auf dem Plane, Im Loche.\nBei den geologisch motivierten Namen werden Art und Beschaffenheit des Bodens thematisiert: Auf dem Melm, In den Kieswiesen. Gewässerbezeichnungen und Sumpfland-Benennungen wären zum Beispiel Borngarten und Strut.\nEine große Rolle spielt die Bodenbedeckung. Bildungen mit dem Kollektivsuffix ‑icht fallen oftmals in den Motivationsbereich Wald, Busch und Bäume: Weidicht, Erlicht, Tännigt. Als Bezeichnung für Grasland sind häufig Zusammensetzungen mit ‑wiese zu finden. Auch Tierbezeichnungen spiegeln sich häufig in Flurnamen (Fuchslöcher, Wolfsgrube).\n            </p>\n          </div>\n          <div\n            data-header=\"Kulturflurnamen\"\n            className=\"accordion-item\"\n          >\n            <p>\n            Die Kulturnamen weisen im Gegensatz zu den Naturnamen auf die kultivierende oder zivilisatorische Tätigkeit des Menschen hin. Hierher gehören beispielsweise die Namen von Landrodungen (Rodeländer, Bernsroda), die Bezeichnungen von Nutzland (In den kurzen Äckern, Auf der Trift) oder Flurnamen, welche die besondere Nutzung des Flurstücks, etwa durch den Anbau einer bestimmten Pflanze oder die Viehzucht, beinhalten (Flachsäcker, Am Lämmerberge, Am Weinberge).\nViele Flurnamen sind mit Zahlen oder Maßeinheiten kombiniert (In den dreizehn Gelengen, Auf der Hufe) oder benennen Sonderland (Gemeindeanger).\nDurch den Zusatz von Vor- oder Familiennamen oder Hinweise auf den Nutzer lassen sich gleiche oder ähnliche Flurnamen unterscheiden (Auf der Pfarrwiese, Helbings Weingarten); Siedlungsnamen zeigen die Nähe oder die Zugehörigkeit zur betreffenden Siedlung an (Löberschützer Schläge, Im Orlamünder Ratsholz).\nIn den Motivationsbereich „Bauwerke und technische Anlagen“ fallen Flurstücke, die nach ihrer Nutzung durch den Menschen, ihrer Zugehörigkeit oder nach einer baulichen Anlage benannt wurden (Im Kalkofen, Am Friedhof). In entsprechend genutzten Regionen weisen Flurnamen auf den Abbau von Bodenschätzen hin: In den Silbergruben, Am Steinbruch.\nBezeichnungen für Verkehrswege und Grenzen werden ebenso in die Benennungen aufgenommen (An der Straße, Über der Bahn, Hinter der Grenze), wie solche für Bauwerke und Plätze, die mit der Verteidigung des Landes im Zusammenhang stehen (Wartberg, Auf der Burg).\nÄltere Rechtsverhältnisse (Am alten Gericht, Galgenberg) sowie Religion und Kirche (Am Frauenholze, Im Pfaffenborn) stellen weitere Benennungsmotive dar. Einige Flurnamen weisen einen Bezug zu vor- und frühgeschichtlichen Fundplätzen auf oder sind mit Sagen und Erzählungen verknüpft. Hier ist eine genaue Überprüfung der Befunde und Belege notwendig, da es sonst schnell zu Fehletymologien kommen kann.\n            </p>\n            \n          </div>\n          <div\n            data-header=\"An der Flurnamenforschung beteiligte Diziplinen\"\n            className=\"accordion-item\"\n          >\n            <p>\n            Flurnamen sind geschichtliche Denkmäler, die ein Bild der früheren Natur- und Kulturlandschaft sowie der Lebensweise der Menschen vermitteln. Sie können u.a. von der Archäologie und der Siedlungsgeschichte herangezogen werden, um ältere, heute verborgene Flurgliederungen aufzudecken oder um Wüstungen zu lokalisieren. Viele Flurnamen weisen auf den Landesausbau und eine frühere Rodungstätigkeit hin.\nAuch über die Kontakte mit einer anderssprachigen Bevölkerung geben sie Auskunft, im südlichen und westlichen deutschen Sprachraum im Hinblick auf die romanisch-deutsche bzw. galloromanisch-deutsche Sprachberührung, an der Ostgrenze des deutschen Sprachraums hinsichtlich des slawisch-deutschen Sprachkontakts. So lassen sich etwa im Osten und in der Mitte Thüringens zahlreiche Flurnamen als Slavica identifizieren und dienen damit gemeinsam mit slawischen Ortsnamen und archäologischen Funden als Zeugnisse slawischer Ansiedlung. Auch im weiteren deutsch-slawischen Kontaktgebiet besitzen die slawischen Flurnamen Aussagekraft hinsichtlich des Verhältnisses der verschiedenen Ethnien zueinander.\nDie Wirtschafts- und die Sozialgeschichte nutzen die Flurnamenforschung, um z.B. Aussagen zu örtlichen Bodenschätzen, zur vorherrschenden Nutzung des Landes oder zum Anbau von Sonderkulturen machen zu können. Die Heimatforschung und die Volkskunde greifen schon seit Langem auf sprachwissenschaftliche Untersuchungen von Flurnamen zurück, da sie wertvolle Hinweise zu lokalen Dialekten, zur heimatlichen Siedlungs-, Wirtschafts- und Sozialgeschichte, zur Wüstungsforschung oder zur lokalen Urgeschichte geben können. Auch die Rechtsgeschichte, Kirchen- und Personengeschichte arbeiten mit namenkundlichen Methoden. Die Namenkunde wird deshalb von der gesamthistorischen Forschung als eine Art „Hilfswissenschaft“ betrachtet.\n\n\n            </p>\n            \n          </div>\n        </Accordion>\n      </div>\n    );\n  }\n}\nexport default Flurnamen;\n","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Gallery.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Search.js",["370","371","372","373"],"import { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\n\n\nimport { MDBCol, MDBBtn, MDBIcon} from \"mdbreact\";\nimport GetService from '../components/apis/get.service';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Display from './Modal';\n\nvar foundObjects=[]\n\n\n\nvar requestGetIDs = {\n    method: 'get',\n    url: 'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%2033.1)%20AND%20objectType:%22cbu%22&rows=50&wt=json',\n    //'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%20%20%20%20%20%20%20%20%20%2033.1)&wt=json',\n    headers: { \n      'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n    }\n  };\n\nclass Search extends Component {\n\n  //define the constructure of component Search\n\n  constructor(props) {\n    super(props);\n\n    const default_query=\"\";\n\n    this.state = {\n        query: default_query,\n        idList: [],\n        results: [],\n        filterBestand:[],\n        all: 0,\n        //parameters for search of query\n        isLoadedForQuery: false,\n        resultsForQuery: [],\n        //modal\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    \n  }\n\n  async componentDidMount() {\n    //first request to get all IDs\n    await axios(requestGetIDs).then((response)=>{\n        //get number of all results\n        this.setState({\n          all: response.data.response.numFound\n        })\n\n        const data = response.data.response.docs; //docs is a list\n        \n        for (var i = 0; i < data.length; i++)\n        {\n            var new_data={\n                'id':data[i]['id'],\n                'title':data[i]['title'][0],\n                \n                //'gnd':data[i]['gnd'],\n                'link':data[i]['link'],\n                //'facetObjectType':data[i]['facetObjectType'],\n                //\"search_result_link_text\":data[i][\"search_result_link_text\"],\n                //'ArchFile_class_001_Label':data[i]['ArchFile_class_001_Label'][1],\n                \n            }\n            foundObjects.push(new_data)\n        }\n        \n       \n        this.setState({\n            results:foundObjects\n        });\n      })\n      .catch((error)=>{\n        console.log(error);\n      });\n      console.log(\"First Call for Suggestions: loaded\");\n  }\n\n\n\n//metadata[0][\"def.title\"][0].title[0][\"_\"]  \n  handleInputChange = () => {\n    \n      this.setState({\n      query: this.search.value,\n      //based on query will rall results be filtered\n      filterBestand:this.state.results.filter((bestand)=>bestand['title'].toLowerCase().includes(this.state.query.toLowerCase()))\n      })\n\n  }\n\n  getResultsForQuery =(event) =>{\n    const title = this.state.query;\n    console.log(title);\n    GetService.searchInfoQuery(title).then((result)=>{\n      console.log(result);\n      this.setState({\n        resultsForQuery:result,\n        isLoadedForQuery:true\n      });\n\n    });\n    console.log(\"results for query loaded\");\n  }\n\n  render() {\n    //adding number of results\n    var isFound = this.state.filterBestand.length;\n    var all = this.state.all;\n    var isLoaded = this.state.isLoadedForQuery;\n\n    let suggestResults;\n    let showResults;\n\n    if(isFound>1){\n      suggestResults=<h6>Beispiele {all} Objekten </h6>\n\n    }\n    else{\n      suggestResults=<h6>Beispiel von {all} Objekten</h6>\n    }\n\n    var isFoundForQuery = this.state.resultsForQuery.length;\n    if(isLoaded==false){\n    }\n    else{\n        if(isFoundForQuery!==0){\n        showResults=<h3 class=\"text-success\">{isFoundForQuery} Ergebnisse gefunden</h3>\n      }\n      else{\n        showResults=<h3 style={{textAlign:'justify'}}class=\"text-danger\">Keine Ergebnisse gefunden!</h3>\n      }\n    }\n\n    //render HTML\n    return (\n      <div className=\"Search\">\n        \n        <MDBCol>\n            <div className=\"input-group md-form form-sm form-1 pl-0\">\n                <div className=\"input-group-prepend\">\n                <span className=\"input-group-text green lighten-3\" id=\"basic-text1\">\n                    <MDBIcon className=\"text-white\" icon=\"search\" />\n                </span>\n                </div>\n                  \n                    <input className=\"form-control my-0 py-1\" \n                        ref={input => this.search = input}\n                        onChange={this.handleInputChange}\n                        //onKeyPress={event=>event.key==\"Enter\" &&this.getResultsForQuery}\n                        type=\"text\" \n                        placeholder=\"Flurname eingeben und Button drücken\" \n                        aria-label=\"Search\" />\n                    <MDBBtn color=\"green\" onClick={this.getResultsForQuery}>Suchen</MDBBtn>\n                 \n            </div>\n        </MDBCol>\n        \n        {/*{suggestResults}*/}\n        {this.state.filterBestand.slice(0,5).map((item, index) => <SuggestList key={index} {...item} />)}\n        \n        {showResults}\n        \n        <MDBTable className=\"table-result\">\n          <MDBTableHead>\n            <tr>\n              <th>Title</th>\n              <th>GND</th>\n              <th>Typ</th>\n              <th>Untergeordnete</th>\n              <th>Details</th> \n            </tr>\n          </MDBTableHead>\n          <MDBTableBody>\n              {this.state.resultsForQuery.map((item, index) => <ResultsList key={index} {...item} />)}\n          </MDBTableBody>\n\n        </MDBTable> \n      </div>\n    );\n  }  \n}\n\nconst ResultsList=(props)=>{\n  console.log(props);\n  console.log(props.place);\n  const objectID=props.id;\n  let childs = props.link;\n  let len = 0\n  if (childs!=undefined){\n    len = childs.length\n  }\n\n  return (\n  <tr>\n    <td>{props['title']}</td>\n    <td>{props['place']}</td>\n    <td>{props['facetObjectType']}</td>\n    <td>{len}</td>\n    <td><Display value={objectID}/></td>\n  </tr> \n  );\n};\n\nconst SuggestList=(props)=>(\n    <p>\n    {props['title']}\n    </p>\n);\n\n\n\nexport default Search;","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Erfassung.js",["374","375","376"],"import React from 'react';\nimport { MDBInputGroup, MDBInput } from \"mdbreact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\n\n\nexport default class Erfassung extends React.Component {\n\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n            erstellt: false\n        }\n    }\n    \n    //set true wenn submitted\n    handleCreate = (event) => {\n        event.preventDefault();\n        \n        this.setState({\n            erstellt: true\n        });\n\n    }\n    //wenn false, das Formular zum Eingeben zu sehen\n    handleAgain = (ev) =>{\n        this.setState({\n            erstellt: false\n        });\n    }\n\n    \n    render() {\n        //wenn der neue Eintrag hinzugefügt wurde\n        if (this.state.erstellt == true) {\n\n            return (\n                <div style={{margin:'auto', width:'50%'}} className=\"card\">\n                <p style={{textAlign:'justify'}}>Der neue Eintrag ist bei uns eingegangen.Vielen Dank für den Beitrag!</p>\n                <button tabIndex=\"7\" className=\"button large expanded\" class=\"btn btn-success\" onClick={this.handleAgain}>Weiter hinzufügen</button>\n                </div>\n            )\n        } else {\n    \n            return (\n\n            <div className=\"grid-container-x small callout content-background\">\n                 <MDBRow>\n                    <MDBCol md=\"4\" className=\"card-db\" style={{margin:'auto'}}>\n                            <h5><strong>Grundlagen für die Datenbank</strong></h5>\n                \n                            <p> \n                            Idealerweise sollen von jedem Flurnamen folgende Punkte bekannt sein:\n                            <ul>\n                                    <li>die amtliche Namenform (aus ALK, Flurkarten und ‑büchern)</li>\n                                    <li>die mundartliche Lautung des Namens</li>\n                                    <li>historische (möglichst weit zurückreichende) Belege (z.B. aus historischen Karten, Lehnbriefen, Grenzbeschreibungen oder Gerichtsbüchern)</li>\n                                    <li>die exakte Lage im Gelände (früher verbal beschrieben, heute mit Hilfe von GPS-Daten und den Karten des Thür. Landesvermessungsamtes exakter möglich),</li>\n                                    <li>eine genaue Beschreibung des benannten Objektes (z.B. feuchte Wiese, steiniges Feld o.ä.),</li>\n                                    <li>überlieferte Hinweise hinsichtlich des Namenursprungs (z.B. Sagen, Erzählungen),</li>\n                                    <li>GND-Nummer der Gemarkung</li>\n                            </ul>\n                            Diese Angaben liefert das Thüringische Flurnamenarchiv jedoch nur in Teilen, so dass weiterer Erhebungsbedarf besteht.\n                            </p>\n        \n                    </MDBCol>\n                    <MDBCol md=\"6\"> \n            \n                    <h5><strong>Neue Flurnamen hinzufügen</strong></h5>\n\n                    <form onSubmit={this.handleCreate}>\n                        <div className=\"form-group\">\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Flurname</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"Flurname, den Sie hinzufügen möchten\"\n                                    required=\"required\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Gemarkung</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"Gemarkung (Ort) des Flurnames\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Beleg des Names</label>\n                                <input\n                                    \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Mundart</label>\n                                <input\n                                    \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Lage und Information</label>\n                                <input\n                                    \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"\"\n                                />\n                            </div>\n                            <div>\n                                \n                                <MDBInput type=\"textarea\" label=\"Weitere Hinweise?\" background />\n                            </div>\n                        </div>\n                            \n                        \n                            <MDBInputGroup\n                                    inputs={\n                                        <div className=\"custom-file\">\n                                        <input\n                                            type=\"file\"\n                                            className=\"custom-file-input\"\n                                            id=\"inputGroupFile01\"\n                                        />\n                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n                                            Datei hochladen\n                                        </label>\n                                        </div>\n                                    }\n                                    containerClassName=\"mb-3\"\n                                    />\n\n                                <div className=\"text-right\">\n                                    <div className=\"grid-x grid-padding-x\">\n                                        <div className=\"cell medium-3\">\n                                            <button tabIndex=\"7\" className=\"button large expanded\" class=\"btn btn-success\" name=\"add_button\">Hinzufügen</button>\n                                            \n                                            <button type=\"button\"\n                                                    class=\"btn btn-danger\"\n                                                    onClick={(e) => {e.preventDefault();window.location.href='/';}}>\n                                                    Abbrechen &#8594; Home\n                                            </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                   \n                    </MDBCol>\n                    </MDBRow>\n                </div>\n            )\n        }\n    }\n}\n","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/apis/get.service.js",["377","378","379"],"import axios from \"axios\";\n\nconst token=\"cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3\"\nconst authHeader={'Authorization': `Basic ${token}`}\nconst API_URL='https://collections.thulb.uni-jena.de/api/v1'\n\n\nconst getResultsList = (data)=>{\n  const foundObjects=[]\n  for (var i = 0; i < data.length; i++)\n        {\n            var new_data={\n                'id':data[i]['id'],\n                'title':data[i]['title'][0],\n                'place':data[i]['place'][0],\n                'gnd':data[i]['gnd'],\n                'link':data[i]['link'],\n                'facetObjectType':data[i]['facetObjectType'],\n                \"search_result_link_text\":data[i][\"search_result_link_text\"],\n                'ArchFile_class_001_Label':data[i]['ArchFile_class_001_Label'][1],\n                \n            }\n            foundObjects.push(new_data)\n        }\n    return foundObjects\n};\n\n\nconst searchInfoQuery  = (title) => {\n      var req = API_URL+ '/search?wt=json&q=+cbuUnitTypes.actual:(33.0 33.1) AND objectType:\"cbu\" AND title:'+title;\n      return axios.get(req, {headers:authHeader}).then((response)=>{\n        \n        const data = response.data.response.docs; //docs is a list\n        const resp_in_list= getResultsList(data);\n\n        return resp_in_list;\n      });      \n};\n\n//Gemarkung und child-Flurkarten\nconst getChilden=(childList)=>{\n  var childInfos=[]\n  for(var i in childList.slice(0,10)){\n    console.log(childList[i]);\n    var childID = childList[i].$[\"xlink:title\"];\n    console.log(childID);\n\n    var childReq = API_URL+'/objects/'+childID;\n    var childRes= axios.get(childReq, {headers:authHeader}).then((response)=>{\n      var xml2js = require('react-native-xml2js');\n      var parser = new xml2js.Parser();\n      var dataJS='';\n      parser.parseString(response.data, function (err, detailJSON) {\n          dataJS = detailJSON.mycoreobject;\n      });\n      console.log(\"CHILDREN INFORMATION\");\n      console.log(dataJS);\n      var info={\n        'id':childID,\n        'area':dataJS.metadata[0][\"def.area\"][0].area[0]._,\n        'evidence':dataJS.metadata[0][\"def.evidence\"][0].evidence[0]._,\n        //'note':dataJS.metadata[0][\"def.note\"][0].note[0]._,\n        'place':dataJS.metadata[0][\"def.place\"][0].place[0]._,\n        'typeTitle':dataJS.metadata[0][\"def.title\"][0].title[0].$.type,\n        'title':dataJS.metadata[0][\"def.title\"][0].title[0]._,\n\n      }\n      return info\n    });\n    console.log(childRes);\n    childInfos.push(childRes);\n  }\n  console.log(childInfos)\n  return childInfos\n}\n\nconst contentDetailGemarkung=(dataJS)=>{\n  var content={\n      'title':dataJS.metadata[0][\"def.title\"][0].title[0][\"_\"],\n      'coordinate':[\n                    dataJS.metadata[0][\"def.coordinates\"][0].coordinates[0]._,\n                    dataJS.metadata[0][\"def.coordinates\"][0].coordinates[1]._,\n                    dataJS.metadata[0][\"def.coordinates\"][0].coordinates[2]._,\n                    dataJS.metadata[0][\"def.coordinates\"][0].coordinates[3]._\n                  ],\n      'gnd':dataJS.metadata[0][\"def.place\"][0].place[0]._,\n      'children': getChilden(dataJS.structure[0].children[0].child),\n  }\n  console.log(content);\n  return content;\n};\n\nconst contentDetailFlurname=(dataJS)=>{\n  const content=\"\";\n  return content;\n};\n\nconst getInfoDetails = (objectID) => {\n  var req = API_URL+'/objects/'+objectID;\n  return axios.get(req, {headers:authHeader}).then((response)=>{\n        \n        var xml2js = require('react-native-xml2js');\n        var parser = new xml2js.Parser();\n        var dataJS='';\n        parser.parseString(response.data, function (err, detailJSON) {\n            dataJS = detailJSON.mycoreobject;\n        });\n        console.log(\"ALL KEYS\");\n        console.log(dataJS);\n        console.log(Object.keys(dataJS.structure));\n        console.log(dataJS.structure['0']);\n        var keys = Object.keys(dataJS.structure['0']);\n\n        if(keys.includes('children')){\n            var contentG = contentDetailGemarkung(dataJS);\n            return 'G'\n        }\n        else{\n          //Flurname\n            contentDetailFlurname(dataJS);\n            var contentF = \"F\" //contentDetailFlurname(dataJS);\n            return contentF\n        }\n        //console.log(dataJS);\n        //var content = contentDetails(dataJS)\n      \n  });\n};\n\nexport default {\n  searchInfoQuery,\n  getInfoDetails\n};","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Modal.js",["380","381","382","383","384","385","386"],"import Modal from 'react-bootstrap/Modal';\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Button from 'react-bootstrap/Button';\nimport {MDBBtn} from 'mdbreact';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\n\nimport GetService from '../components/apis/get.service';\n\nfunction Display(objectID) {\n\n    \n\n\n    //const resp = GetService.getInfoDetails(objectID.value);\n    //console.log(resp);\n    var resp=\"\";\n    var title=\"tessssssssssss\";\n\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [details, setDetails] = useState(\"\");\n\n    const handleClose = () => setShow(false);\n    /*\n    const handleShow = () => {\n      \n      console.log(objectID);\n      GetService.getInfoDetails(objectID.value).then((details)=>{\n        resp=details;\n      });\n      console.log(\"Response Details aus GETSERVICE\");\n      console.log(resp);\n      console.log(mResp);\n      //title = resp.mycoreoject.metadata[0][\"def.title\"][0].title[0][\"_\"] \n      console.log(title);\n      \n      setShow(true);\n    };\n    */\n\n    useEffect(() => {\n      //setLoading(true);\n      GetService.getInfoDetails(objectID.value).then((res)=>{\n        console.log(\"Test\");\n        console.log(res);\n        setDetails(res);\n          //res.metadata[0][\"def.title\"][0].title[0][\"_\"]);\n        //console.log(res.metadata);\n      });\n      //setLoading(false);\n    }, []);\n\n    \n\n    return (\n      <>\n        \n        <MDBBtn class=\"btn btn-success\" onClick={()=>setShow(true)}>\n          Anzeige\n        </MDBBtn>\n\n        <Modal\n          size=\"lg\"\n          show={show}\n          onHide={() => setShow(false)}\n          aria-labelledby=\"example-modal-sizes-title-lg\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\n              {details}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            \n              <MDBContainer>\n                <MDBRow>\n                  <MDBCol md=\"3\">\n                    \"key\"\n                  </MDBCol>\n                  <MDBCol md=\"6\">\n                    \"test\"\n                  </MDBCol>\n                </MDBRow>\n              </MDBContainer>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"dark\" class=\"btn btn-dark\" onClick={handleClose}>\n              Schließen\n            </Button>\n        </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\nconst RowDetails=(props)=>(\n    <p>\n    testen\n    </p>\n);\nexport default Display;\n\n","/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Literatur.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Datenbank.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/index.js",[],["387","388"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/App.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reportWebVitals.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/store.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Register.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Home.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Login.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Flurnamen.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Project.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Erfassung.js",["389"],"import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { MDBInputGroup, MDBInput } from \"mdbreact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {MDBRow, MDBCol} from \"mdbreact\";\n\n\nexport default class Erfassung extends React.Component {\n\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n            erstellt: false\n        }\n    }\n    \n    //set true wenn submitted\n    handleCreate = (event) => {\n        event.preventDefault();\n        \n        this.setState({\n            erstellt: true\n        });\n\n    }\n    //wenn false, das Formular zum Eingeben zu sehen\n    handleAgain = (ev) =>{\n        this.setState({\n            erstellt: false\n        });\n    }\n\n    \n    render() {\n        //wenn der neue Eintrag hinzugefügt wurde\n        if (this.state.erstellt == true) {\n\n            return (\n                <div style={{margin:'auto', width:'50%'}} className=\"card\">\n                <p style={{textAlign:'justify'}}>Der neue Eintrag ist bei uns eingegangen.Vielen Dank für den Beitrag!</p>\n                <button name=\"btn-continue-add\" className=\"button\" class=\"btn btn-success\" onClick={this.handleAgain}>Weiter hinzufügen</button>\n                <button name=\"btn-back\"\n                        type=\"button\"\n                        class=\"btn btn-danger\"\n                        >\n                        <Link\n                            style={{ color: '#FFF' }}\n                            id=\"link-back\"\n                            name=\"link-back\" \n                            to=\"/\">\n                            Abbrechen &#8594; Home</Link>\n                </button>\n                </div>\n            )\n        } else {\n    \n            return (\n\n            <div id=\"datenerfassung-area\" className=\"grid-container-x small callout content-background\">\n                 <MDBRow>\n                    <MDBCol id=\"card-db\" md=\"4\" className=\"card-db\" style={{margin:'auto'}}>\n                            <h5><strong>Grundlagen für die Datenbank</strong></h5>\n                \n                            <p> \n                            Idealerweise sollen von jedem Flurnamen folgende Punkte bekannt sein:\n                            <ul>\n                                    <li>die amtliche Namenform (aus ALK, Flurkarten und ‑büchern)</li>\n                                    <li>die mundartliche Lautung des Namens</li>\n                                    <li>historische (möglichst weit zurückreichende) Belege (z.B. aus historischen Karten, Lehnbriefen, Grenzbeschreibungen oder Gerichtsbüchern)</li>\n                                    <li>die exakte Lage im Gelände (früher verbal beschrieben, heute mit Hilfe von GPS-Daten und den Karten des Thür. Landesvermessungsamtes exakter möglich),</li>\n                                    <li>eine genaue Beschreibung des benannten Objektes (z.B. feuchte Wiese, steiniges Feld o.ä.),</li>\n                                    <li>überlieferte Hinweise hinsichtlich des Namenursprungs (z.B. Sagen, Erzählungen),</li>\n                                    <li>GND-Nummer der Gemarkung</li>\n                            </ul>\n                            Diese Angaben liefert das Thüringische Flurnamenarchiv jedoch nur in Teilen, so dass weiterer Erhebungsbedarf besteht.\n                            </p>\n        \n                    </MDBCol>\n                    <MDBCol md=\"6\"> \n            \n                    <h5><strong>Neue Flurnamen hinzufügen</strong></h5>\n\n                    <form id=\"form-datenerfassung\" onSubmit={this.handleCreate}>\n                        <div className=\"form-group\">\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Flurname</label>\n                                <input\n                                    name=\"input-flurname\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"Flurname, den Sie hinzufügen möchten\"\n                                    required=\"required\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Gemarkung</label>\n                                <input\n                                    name=\"input-gemarkung\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"Gemarkung des Flurnames\"\n                                    required=\"required\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Beleg des Names</label>\n                                <input\n                                    name=\"input-beleg\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Mundart</label>\n                                <input\n                                    name=\"input-mundart\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"\"\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"formGroupExampleInput\">Lage und Information</label>\n                                <input\n                                    name=\"input-lage\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"formGroupExampleInput\"\n                                    placeholder=\"\"\n                                />\n                            </div>\n                            <div>\n                                \n                                <MDBInput id=\"input-extra\" name=\"input-area-extra\" type=\"textarea\" label=\"Weitere Hinweise?\" background />\n                            </div>\n                        </div>\n                            \n                        \n                            <MDBInputGroup\n                                    inputs={\n                                        <div className=\"custom-file\">\n                                        <input\n                                            type=\"file\"\n                                            className=\"custom-file-input\"\n                                            id=\"inputGroupFile01\"\n                                        />\n                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n                                            Datei hochladen\n                                        </label>\n                                        </div>\n                                    }\n                                    containerClassName=\"mb-3\"\n                                    />\n\n                                <div className=\"text-right\">\n                                    <div className=\"grid-x grid-padding-x\">\n                                        <div className=\"cell medium-3\">\n                                            <button tabIndex=\"7\" className=\"button large expanded\" class=\"btn btn-success\" name=\"btn-submit\">Hinzufügen</button>\n                                            \n                                            \n\n                                            <button name=\"btn-back\"\n                                                    type=\"button\"\n                                                    class=\"btn btn-danger\"\n                                                    >\n                                                    <Link\n                                                        style={{ color: '#FFF' }}\n                                                        id=\"link-back\"\n                                                        name=\"link-back\" \n                                                        to=\"/\">\n                                                        Abbrechen &#8594; Home</Link>\n                                            </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                   \n                    </MDBCol>\n                    </MDBRow>\n                </div>\n            )\n        }\n    }\n}\n","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Gallery.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Profile.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Literatur.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Search.js",["390","391","392","393","394","395"],"import { render } from 'react-dom';\nimport React, { Component} from 'react';\nimport axios from 'axios';\n//import {Link} from 'react-router-dom';\n//import DropdownButton from 'react-bootstrap/DropdownButton';\n//import Dropdown from 'react-bootstrap/Dropdown';\n//import ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nimport { MDBCol, MDBBtn, MDBIcon, MDBRow} from \"mdbreact\";\nimport GetService from '../components/apis/get.service';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport Display from './Modal';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Lightbox from 'react-image-lightbox';\nimport \"react-image-lightbox/style.css\";\nimport { useState } from 'react';\n\n\nvar foundObjects=[]\n\n\nvar requestGetIDs = {\n    method: 'get',\n    url: 'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%2033.1)%20AND%20objectType:%22cbu%22&rows=50&wt=json',\n    //'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%20%20%20%20%20%20%20%20%20%2033.1)&wt=json',\n    headers: { \n      'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n    }\n  };\n\nclass Search extends Component {\n\n  //define the constructure of component Search\n\n  constructor(props) {\n    super(props);\n\n    const default_query=\"\";\n\n    this.state = {\n        query: default_query,\n        idList: [],\n        results: [],\n        filterBestand:[],\n        all: 0,\n        //parameters for search of query\n        isLoadedForQuery: false,\n        resultsForQuery: [],\n        filterSelect: \"0\",\n        //isOpenImage:false\n        //modal\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    \n  }\n\n  async componentDidMount() {\n    //first request to get all IDs\n    await axios(requestGetIDs).then((response)=>{\n        //get number of all results\n        this.setState({\n          all: response.data.response.numFound\n        })\n\n        const data = response.data.response.docs; //docs is a list\n        \n        for (var i = 0; i < data.length; i++)\n        {\n            var new_data={\n                'id':data[i]['id'],\n                'title':data[i]['title'][0],\n                \n                //'gnd':data[i]['gnd'],\n                'link':data[i]['link'],\n                //'facetObjectType':data[i]['facetObjectType'],\n                //\"search_result_link_text\":data[i][\"search_result_link_text\"],\n                //'ArchFile_class_001_Label':data[i]['ArchFile_class_001_Label'][1],\n                \n            }\n            foundObjects.push(new_data)\n        }\n       \n        this.setState({\n            results:foundObjects\n            //results: fakeResp\n        });\n      })\n      .catch((error)=>{\n        console.log(error);\n      });\n      console.log(\"First Call for Suggestions: loaded\");\n  }\n\n\n  handleInputChange = () => {\n      if(this.search.value!==''){\n      this.setState({\n      query: this.search.value,\n      //based on query will rall results be filtered\n      //suggestion durch der Title die Buchstaben aus dem Eingabe erhält\n      filterBestand:this.state.results.filter((bestand)=>bestand['title'].toLowerCase().includes(this.state.query.toLowerCase()))\n      })\n    }\n    else{\n      this.setState({\n        isLoadedForQuery:false\n      })\n    }\n\n  }\n\n  handelSelect = (e) =>{\n    console.log(\"event\" + e.target.value);\n    this.setState({\n      filterSelect: e.target.value\n    });\n    //console.log(\"choose\" + this.state.filterSelect);\n  }\n  /*\n  Daten für eingebene Anfrage aufrufen\n  Response wird in dem State resultForQuery gespeichert\n  */\n  getResultsForQuery =(event) =>{\n    const title = this.state.query;\n    const filter = this.state.filterSelect;\n    console.log(title);\n    GetService.searchInfoQuery(title, filter).then((result)=>{\n      console.log(\"query\");\n      console.log(this);\n      console.log(result);\n      this.setState({\n        resultsForQuery:result,\n        isLoadedForQuery:true,\n      \n      });\n      //this.search.value=\"\";\n\n    });\n    console.log(\"results for query loaded\");\n    \n  }\n\n  render() {\n    //adding number of results\n    var isFound = this.state.filterBestand.length;\n    \n    var isLoaded = this.state.isLoadedForQuery;\n\n    let suggestResults;\n    let showResults;\n    let filterSearch;\n    \n    \n   if(isFound && isLoaded==false){\n\n     suggestResults=<div className=\"card\" style={{margin:'auto', textAlign:'justify'}} id=\"list-suggests\">\n     {this.state.filterBestand.slice(0,5).map((item, index) => <SuggestList key={index} {...item} />)}\n     </div>\n   }\n    var isFoundForQuery = this.state.resultsForQuery.length;\n    if(isLoaded==true){\n      if(isFoundForQuery!==0){\n        showResults=<h3 id=\"id-number-results\" class=\"text-success\"><span>{isFoundForQuery}</span> Ergebnis gefunden</h3>\n      }\n      else{\n        showResults=<h3 id=\"id-number-results\" style={{textAlign:'justify'}}class=\"text-danger\"><span>0</span> Ergebnis gefunden!</h3>\n      }\n    }\n\n    filterSearch=<Form center>\n    {['checkbox'].map((type) => (\n      <div key={`default-${type}`} className=\"mb-3\">\n        <Form.Row center style={{marginLeft:'auto', marginRight:'auto'}}>\n        <Form.Group as={Col} md=\"4\">\n          <Form.Check\n            defaultChecked={true}\n            type={type}\n            id={`default-${type}`}\n            label={'Flurname'}\n          />\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\">\n          <Form.Check\n            //disabled\n            defaultChecked={true}\n            type={type}\n            label={'Gemarkung'}\n            id={`disabled-default-${type}`}\n          />\n        </Form.Group>\n        <Form.Group as={Col} md=\"4\">\n          <Form.Check\n            //disabled\n            type={type}\n            label={'Ort'}\n            id={`disabled-default-${type}`}\n          />\n        </Form.Group>\n        </Form.Row>\n      </div>\n    ))}\n</Form>\n\n\n    //render HTML\n    return (\n      <div className=\"Search\">\n        \n        <MDBCol>\n            <div className=\"input-group md-form form-sm form-1 pl-0\">\n                <div className=\"input-group-prepend\">\n\n                <span className=\"input-group-text green lighten-3\" id=\"basic-text1\">\n                    <MDBIcon className=\"text-white\" icon=\"search\" />\n                </span>\n                <span className=\"input-group-text green lighten-3\">\n                  <select className=\"browser-default custom-select\" onChange={this.handelSelect}>\n                    <option select='selected' value=\"0\">optionale Suche</option>\n                    <option value=\"1\">Flurkarte</option>\n                    <option value=\"2\">Gemarkung</option>\n                    <option value=\"3\">Ort</option>\n                  </select>\n                </span>\n                </div>\n                  \n                    <input name=\"input-query\"\n                        className=\"form-control my-0 py-1\" \n                        ref={input => this.search = input}\n                        onChange={this.handleInputChange}\n                        //onKeyPress={event=>event.key==\"Enter\" &&this.getResultsForQuery}\n                        type=\"text\" \n                        placeholder=\"Suchbegriff eingeben und Button drücken\" \n                        aria-label=\"Search\" />\n                    <MDBBtn id=\"id-btn-search\" color=\"green\" onClick={this.getResultsForQuery}>Suchen</MDBBtn>\n                 \n              </div>\n        </MDBCol>\n\n        {/*filterSearch*/}\n        {/*Suggessions*/}        \n        {suggestResults}\n        \n\n        {showResults}\n        \n        <MDBTable id=\"table-results\" className=\"table-result\">\n          <MDBTableHead>\n            <tr>\n              <th>Title</th>\n              <th>GND</th>\n              <th>Typ</th>\n              <th>Untergeordnete</th>\n              \n              <th>Details</th> \n              <th>Beispiel</th>\n              <th>Kollektion</th>\n            </tr>\n          </MDBTableHead>\n          <MDBTableBody>\n              {this.state.resultsForQuery.map((item, index) => <ResultsList key={index} {...item} />)}\n              {/*{this.state.resultsForQuery.map((item, index) => <SearchResult key={index} item={item} />)*/}\n          </MDBTableBody>\n\n        </MDBTable> \n      </div>\n    );\n  }  \n}\n\n\nconst ResultsList=(props)=>{\n  //console.log(props);\n\n  const [isOpen, setImage] = useState(false);\n  \n  const objectID=props.id;\n  const title = props.title;\n\n\n  console.log(\"result properties\");\n  console.log(props);\n\n  //let childs = props.link;\n  let isLink = null;\n  if (props.img===\"\"){\n    isLink=false;\n  }\n  else{\n    isLink=true;\n  }\n\n  //var detailsPage = \"/details:\"+objectID;\n  //img[0].$[\"xlink:href\"]\n\n  return (\n  <tr>\n    <td>{props['title']}</td>\n    <td>{props['place']}</td>\n    <td>{props['facetObjectType']}</td>\n    <td>{props['len']}</td>\n    \n    <td>\n    <Display name=\"modalOpen\" value={[title,objectID]}/>\n    {/*\n        <Link\n        class=\"btn btn-success\"\n        to={detailsPage}\n        >Anzeige</Link>\n    */}\n    </td> \n    <td>\n      {isLink ? (\n      <div>\n        <img className=\"photo\" src={props['img']} onClick={() => setImage(true)}/>\n        \n        {isOpen && (\n        <Lightbox\n            mainSrc={props['img']}\n            onCloseRequest={() => setImage(false)}\n          />\n        )}\n      </div>\n      )\n      :(<p></p>)\n      }\n    </td>\n    <td>\n      {isLink ? (\n      <div>\n       \n        <a style={{margin:'auto', textAlign:'justify'}} href={props['collection']}><MDBIcon icon=\"eye\"/></a>\n        \n      </div>\n      )\n      :(<p></p>)\n      }\n    </td>\n\n  </tr> \n  );\n};\n\nconst SuggestList=(props)=>(\n    <p class=\"p-suggest\">\n    {props['title']}\n    </p>\n);\n\n\n\nexport default Search;\n\n//\n//<td name=\"details\">\n//<Display name=\"modalOpen\" value={[title,objectID]}/>\n//<Display \n//  objectTitle={props['title']} \n//  objectID={props.id}/>\n//</td>\n","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/actions/message.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Datenbank.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/helpers/history.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/actions/auth.js",["396","397"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\n/*\n-Hier wird ein Fake Authorziation erstellt.\n-für jede Aktion wird ein Service (fake Backend) durchgeführt\n-kiene echte Response hier. Response wird selbst erstellt.\n*/\n\nexport const register = (username, email, password) => (dispatch) => {\n/*\ndie eingabe von Nutzer wird weiter an Service eingegeben\nBedingungen der Registrierung, Anmeldung wurden in der service definiert. Dann wird eine Response entsprechend erstellt.\n*/\n  var response = AuthService.register(username, email, password); //AuthService wird Registierung checken mit den gegebenen Variablen\n  console.log(response);\n  if (response.status==200){\n    dispatch({\n      type: REGISTER_SUCCESS,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message,\n    });\n    return Promise.resolve();\n  }\n  else{\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message,\n    });\n    return Promise.reject();\n  }\n};\n\nexport const login = (username, password) => (dispatch) => {\n\n  var resp = AuthService.login(username, password); //LOGIN SERVICE wird Nutzer ins lokalStorage hinzugfügen wenn message \"success\" ist\n\n  if (resp.data.message==\"success\"){\n    console.log(\"Action\");\n    console.log(resp.data.auth.user);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: { user: resp.data.auth.user},\n    });\n\n    return Promise.resolve();\n\n  }\n  else{\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: resp.data.message,\n    });\n\n    return Promise.reject();\n\n  };\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout(); //im Autho service wird Nutzer aus dem localStorage entfernt\n\n  dispatch({\n    type: LOGOUT,\n  });\n};","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reducers/index.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Accordion.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/Modal.js",["398","399","400"],"import Modal from 'react-bootstrap/Modal';\nimport React, { useState} from \"react\";\n//import ReactDOM from \"react-dom\";\nimport Button from 'react-bootstrap/Button';\nimport {MDBBtn, MDBIcon} from 'mdbreact';\nimport {MDBTable, MDBTableHead, MDBTableBody } from \"mdbreact\";\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport GetService from '../components/apis/get.service';\n\n//const global_details = [{}]\nfunction Display(objectID) {\n\n    //const resp = GetService.getInfoDetails(objectID.value);\n    //console.log(resp);\n    //var resp=\"\";\n    //var title=\"tessssssssssss\";\n\n    const [show, setShow] = useState(false); //first state fur variable show\n    const [loading, setLoading] = useState(false);\n    const [details, setDetails] = useState([]);\n    \n    console.log(\"first\"+show);\n\n\n    let n = 0;\n    const handleClose = () => {\n      console.log(\"handleClose\")\n      setShow(false);\n      \n      console.log(show)\n    };\n    //GET DETAILS RESPONSE\n    \n\n\n    const handleClick = () => {\n      console.log(objectID);\n\n      setLoading(true);\n      \n      console.log(\"get Click\");\n      var detailsL=[]\n      console.log(show);\n      var rep = GetService.getInfoDetails(objectID.value[1]);\n      console.log(\"content aus SERVICE will be here transported\");\n      console.log(rep);\n      const getRes = rep.then((res)=>{\n        var a = res;\n        setDetails(a[0]);\n        detailsL= a;\n        console.log(\"in function\");\n        console.log(detailsL);\n        console.log(details);\n        setLoading(false);\n      });\n      \n      setShow(true);\n    };\n    \n    const Flurname=(props)=>{\n     \n      console.log(\"Flurname COMPONENTEN AUFRUFEN\");\n      console.log(props['value']);\n      \n      const res = props['value'];\n      console.log(show);\n      return (\n      <tr>\n        <td>{res['title']}</td>\n        <td>{res['area']}</td>\n        <td>{res['evidence']}</td>\n        <td>{res['note']}</td>\n        {/*<td>{res['parent']}</td>*/}\n        {/*<td><Example></Example></td>*/}\n      </tr> \n      );\n\n    };\n\n    return (\n      <>\n        \n        <MDBBtn className=\"btn-anzeige\" class=\"btn btn-success\"onClick={handleClick} >\n          Anzeige\n        </MDBBtn>\n        {/*POP UP Fenster wird geöffet*/}\n        <Modal\n          size=\"lg\"\n          show={show}\n          //dialogClassName=\"modal-1000w\"\n          onHide={() => setShow(false)}\n          aria-labelledby=\"example-modal-sizes-title-lg\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\n              {objectID.value[0]}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          {loading ? (\n            <Spinner animation=\"border\" variant=\"success\" />\n          ):(\n            <MDBTable id=\"detail-results\" className=\"table-detail-result\">\n            <MDBTableHead>\n              <tr>\n                <th>Flurname</th>\n                <th>Area</th>\n                <th>Beleg</th>\n                <th>Note</th>\n                {/*<th>Bild</th>*/}\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n                {details.map((item, index)=><Flurname key={index} value={item}/>)}\n                \n            </MDBTableBody>\n            </MDBTable>\n          )}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button id=\"btn-details-close\" variant=\"dark\" class=\"btn btn-dark\" onClick={handleClose}>\n              Schließen\n            </Button>\n        </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n  function Example() {\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n        <MDBIcon icon=\"eye\" />\n        </Button>\n  \n        \n        \n    <Modal\n      show={show} onHide={handleClose}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Modal heading\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Centered Modal</h4>\n        <p>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n          consectetur ac, vestibulum at eros.\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n    </Modal>\n\n      </>\n    );\n  }\nexport default Display;\n\n","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/actions/types.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/services/user.service.js",["401"],["402","403"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/services/auth.service.js",["404","405","406"],"//import axios from \"axios\";\n\nconst m_account = {id:1, username:\"Hanh\", password:\"hanhhanh\", email:\"hanh@gmail.com\",roles:['ROLE_USER']}\n\n\nconst register = (username, email, password) => {\n  if (username!==\"Hanh\"){\n\n      var test_response={\n        // `data` is the response that was provided by the server\n        data: \n          {auth: \n            {id:2, username:username, email:email}, \n            message: 'erfolgreich registeriert'\n          }\n        ,\n      \n        // `status` is the HTTP status code from the server response\n        status: 200,\n      \n        // `statusText` is the HTTP status message from the server response\n        statusText: 'OK',\n      \n        // `headers` the headers that the server responded with\n        // All header names are lower cased\n        headers: {'Content-Type': 'text/json'},\n      \n        // `config` is the config that was provided to `axios` for the request\n        config: {},\n      \n        // `request` is the request that generated this response\n        // It is the last ClientRequest instance in node.js (in redirects)\n        // and an XMLHttpRequest instance the browser\n        request: {}\n      };\n      \n      console.log(\"auth.service:\");\n      console.log(test_response);\n      \n      return test_response;\n    }\n    else{\n\n      var error={\n        // `data` is the response that was provided by the server\n        data: \n          {auth: {id:2, username:username, email:email}, message: 'Nutzer existiert bereits'}\n        ,\n      \n        // `status` is the HTTP status code from the server response\n        status: 406,\n      \n        // `statusText` is the HTTP status message from the server response\n        statusText: 'Not accepted',\n      \n        // `headers` the headers that the server responded with\n        // All header names are lower cased\n        headers: {'Content-Type': 'text/json'},\n      \n        // `config` is the config that was provided to `axios` for the request\n        config: {},\n      \n        // `request` is the request that generated this response\n        // It is the last ClientRequest instance in node.js (in redirects)\n        // and an XMLHttpRequest instance the browser\n        request: {}\n      };\n      \n      return error;\n\n    }\n      /*\n      return axios.post(API_URL + \"signup\", {\n        username,\n        email,\n        password,\n      });\n      */\n      \n};\n\nconst login = (username, password) => {\n\n  if (username==m_account.username && password== m_account.password){\n    var resp={\n      data:{\n        auth:{\n          user:{\n            id:m_account.id, \n            username: m_account.username, \n            email: m_account.email, \n            roles:m_account.roles\n          }\n        },\n        message:\"success\"\n      }\n    }\n    localStorage.setItem(\"user\", JSON.stringify(resp.data.auth.user));\n    return resp\n  }\n  else{\n    var error={\n      data:{\n        auth:{\n          user:{}\n        }, \n          message:\"Nutzername oder Password nicht korrekt\"}\n      }\n    return error\n  }\n  /*\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n    */\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/components/apis/get.service.js",["407","408","409","410","411","412","413","414"],"import axios from \"axios\";\n\n//Infornation von APIs\nconst token=\"cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3\"\nconst authHeader={'Authorization': `Basic ${token}`}\nconst API_URL='https://collections.thulb.uni-jena.de/api/v1'\n\n\nconst keys=[\n  'title',\n  'area',\n  'evidence',\n  'note',\n  'parent'\n]\n/*\nAus der Daten werden nur folgende Funktionen eines Ergebnises gespeichert.\n*/\nconst getImage = async (objectID) =>{\n  var imgReq = \"https://collections.thulb.uni-jena.de/api/v1/objects/\"+objectID;\n  var imgL=[];\n  await axios.get(imgReq, {headers:authHeader}).then((response)=>{\n          \n      var xml2js = require('react-native-xml2js');\n      var parser = new xml2js.Parser();\n      var dataJS='';\n      parser.parseString(response.data, function (err, detailJSON) {\n          dataJS = detailJSON.mycoreobject;\n      });\n      \n      try{\n      imgL = dataJS.structure[0].derobjects[0].derobject;\n      }catch{}\n\n      \n      \n  });\n  console.log(\"test image\");\n  console.log(imgL);\n  return imgL;\n};\n\nasync function getResultsList(data){\n\n  const foundObjects=[]\n  for (var i = 0; i < data.length; i++)\n        {\n            var len=0\n            if(data[i]['link']!=null){\n              len=data[i]['link'].length\n            }\n            var new_data={\n                'id':data[i]['id'],\n                'title':data[i]['title'][0],\n                'place':data[i]['place'][0],\n                'gnd':data[i]['gnd'],\n                'link':data[i]['link'],\n                'len':len,\n                'facetObjectType':data[i]['facetObjectType'],\n                \"search_result_link_text\":data[i][\"search_result_link_text\"],\n                'ArchFile_class_001_Label':data[i]['ArchFile_class_001_Label'][1],\n                'collection':'',\n                'img':''\n                \n            }\n            var objectID = new_data['id'];\n            var imgL = []\n            \n            imgL = await getImage(objectID);\n            /*.then(function (res){\n              console.log(\"in function get imageeee\");\n              \n              imgL = res;\n              console.log(imgL);\n              \n            });\n            */\n            if(imgL.length!=0){\n            console.log(\"outside of function\");\n            console.log(imgL[0]);\n            //.$[\"xlink:href\"]\n            var COLLECTION_URL = \"https://collections.thulb.uni-jena.de/rsc/viewer/\" //HisBest_derivate_00024139/Flurnamen_Erfurt_Arnstadt_4605.tif\n            var VIEW_URL = 'https://collections.thulb.uni-jena.de/servlets/MCRTileCombineServlet/MID/';\n            var TIF = imgL[0].maindoc[0];\n\n            new_data['img'] = VIEW_URL+imgL[0].$[\"xlink:href\"]+\"/\"+TIF;\n            new_data['collection'] = COLLECTION_URL+imgL[0].$[\"xlink:href\"]+\"/\"+TIF;\n            }\n            console.log(\"adding to new data\");\n            console.log(new_data.img);\n\n            foundObjects.push(new_data)\n        }\n    return foundObjects\n};\n\n\n/*\nFunktion zum Aufrufen der Daten mit dem gegebenen Title.\nReturn bereits in JSON\nErgebnisse für gesuchten Title werden an Search Komponent gesendet\n*/\nconst searchInfoQuery  = (title, filter) => {\n  console.log(\"search option: \" + filter);\n    if(filter==\"0\"){\n      var req = API_URL+ '/search?wt=json&q=+cbuUnitTypes.actual:(33.0 33.1) AND title:'+title;\n      return axios.get(req, {headers:authHeader}).then((response)=>{\n        \n          const data = response.data.response.docs; //docs is a list\n          const resp_in_list= getResultsList(data);\n          return resp_in_list;\n      });    \n    }   \n    if(filter==\"1\"){\n      var req_flurname = API_URL+ '/search?wt=json&q=+cbuUnitTypes.actual:(33.0 33.1) AND objectType:\"cbu\" AND facetObjectType:\"Flurkarte\" AND title:'+title;\n      return axios.get(req_flurname, {headers:authHeader}).then((response)=>{\n        \n          const data = response.data.response.docs; //docs is a list\n          const resp_in_list= getResultsList(data);\n          return resp_in_list;\n      });    \n    }\n    if(filter==\"2\"){\n      var req_gemarkung = API_URL+ '/search?wt=json&q=+cbuUnitTypes.actual:(33.0 33.1) AND objectType:\"cbu\" AND facetObjectType:\"Gemarkung\" AND title:'+title;\n      return axios.get(req_gemarkung, {headers:authHeader}).then((response)=>{\n        \n          const data = response.data.response.docs; //docs is a list\n          const resp_in_list= getResultsList(data);\n          return resp_in_list;\n      });    \n    }\n    if(filter==\"3\"){\n      //https://collections.thulb.uni-jena.de/api/v1/search?wt=json&q=+cbuUnitTypes.actual:(33.0 33.1) AND place_extended_search:\"Jena\"\n      var req_place = API_URL+ '/search?wt=json&q=+cbuUnitTypes.actual:(33.0 33.1) AND objectType:\"cbu\" AND place_extended_search:'+title;\n      return axios.get(req_place, {headers:authHeader}).then((response)=>{\n        \n          const data = response.data.response.docs; //docs is a list\n          const resp_in_list= getResultsList(data);\n          return resp_in_list;\n      });    \n    }\n};\n\n/*\n- Eine Gemarkung hat eine Sammlung von untergeordneten Flurnamen als children\n- Es gibt eine Liste der children der Gemarkung\n- Für jedes Element (flurname) wird ein GET-Request mit ID gesendet\n- Nur einige Merkmale wurden gespeichert\n*/\n\nconst getChilden= async (childList)=>{\n  //console.log(\"RUFEN CHILDREN\");\n  var childInfos=[];\n  /*\n  var childImgs=[];\n  for(var i in childList.slice(0,15)){\n    var childID = childList[i].$[\"xlink:title\"];\n    var imgReq = API_URL+'/search?wt=json&q=+cbuUnitTypes.actual:(33.0 33.1) AND returnId:'+childID;\n    await axios.get(imgReq,{headers:authHeader}).then(function (response){\n      var data = response.data.response.docs;\n\n    }\n  };\n*/\n  for(var i in childList.slice(0,5)){\n      var childID = childList[i].$[\"xlink:title\"];\n      var childReq = API_URL+'/objects/'+childID;\n      var childRes = {};\n      //get Images\n\n      await axios.get(childReq, {headers:authHeader}).then(function (response) {\n        var xml2js = require('react-native-xml2js');\n        var parser = new xml2js.Parser();\n        var dataJS='';\n        parser.parseString(response.data, function (err, detailJSON) {\n            dataJS = detailJSON.mycoreobject;\n            //console.log(\"content\");\n            //console.log(content);\n            //dataJS = content;\n          });\n          \n        var content={\n          title:' ',\n          area:' ',\n          evidence:' ',\n          note:' ',\n          parent:' '\n        };\n        \n          try{\n            //metadata[0][\"def.title\"][0].title[0]._\n            var title = dataJS.metadata[0][\"def.title\"][0].title[0]._;\n            content.title=title;\n          }catch{}\n        \n          try{\n            var area = dataJS.metadata[0][\"def.area\"][0].area[0]._;\n            content.area=area;\n          }catch{}\n          try{\n            var evidence = dataJS.metadata[0][\"def.evidence\"][0].evidence[0]._;\n            content.evidence=evidence;\n          }catch{}\n          try{\n            var note = dataJS.metadata[0][\"def.note\"][0].note[0]._;\n            content.note=note;\n          }catch{}\n        \n          try{\n            var parent = dataJS.structure[0].parents[0].parent[0].$[\"xlink:href\"];\n            content.parent=parent;\n          }catch{}\n          //return resJ;\n          //console.log('content');\n          //console.log(content);\n          childRes = content;\n          //console.log('chilRes in function');\n          //console.log(childRes);\n          \n        });\n      \n        console.log(\"children\");\n          console.log(childRes);\n          childInfos.push(childRes);\n      }\n      \n  return childInfos\n}\n\n/*\nresponse von einer Gemarkung beinhaltet mehrere children\ninformation von children wird mit der funktion getChildren gefunden und gespeichert\n*/\nconst contentDetailGemarkung= async (dataJS)=>{\n  console.log(\"JSONJSON\");\n  console.log(dataJS);\n  var content={\n      'title':dataJS.metadata[0][\"def.title\"][0].title[0][\"_\"],\n      //structure[0].derobjects[0].derobject[0].maindoc[0]\n      //'img':dataJS.structure[0].derobjects[0].derobject[0].maindoc[0],\n     'img':[],\n      'children': []\n  }\n  \n  try{\n    content.img = dataJS.structure[0].derobjects[0].derobject//[0].maindoc[0]\n  }\n  catch{}\n  console.log(\"IMAGE\");\n  console.log(content.img);\n  var childINfos = null;\n \n \n  await getChilden(dataJS.structure[0].children[0].child).then(function (result){\n    console.log(result);\n    childINfos = result;\n  });\n  \n  content.children = childINfos;\n\n  var result = []\n  result.push(childINfos);\n  return result;\n};\n\n/*\nInformationen eines Flurnamen wird gefiltert und gespeichert\n\n*/\nconst contentDetailFlurname=(dataJS)=>{\n\n  //console.log(dataJS);\n  //console.log(\"SERVER RESPONSE\");\n  \n  const details=[[]];\n  const content={\n    title:' ',\n    area:' ',\n    evidence:' ',\n    note:' ',\n    parent:' ',\n    img:[]\n  };\n  \n  try{\n    //metadata[0][\"def.title\"][0].title[0]._\n    var title = dataJS.metadata[0][\"def.title\"][0].title[0]._;\n    content.title=title;\n  }catch{\n\n  }\n\n  try{\n    var area = dataJS.metadata[0][\"def.area\"][0].area[0]._;\n    content.area=area;\n  }catch{\n\n  }\n\n  try{\n    var evidence = dataJS.metadata[0][\"def.evidence\"][0].evidence[0]._;\n    content.evidence=evidence;\n  }catch{\n\n  }\n\n  try{\n    var note = dataJS.metadata[0][\"def.note\"][0].note[0]._;\n    content.note=note;\n  }catch{\n\n  }\n\n  try{\n    var parent = dataJS.structure[0].parents[0].parent[0].$[\"xlink:href\"];\n    content.parent=parent;\n  }catch{\n\n  }\n\n  try{\n    content.img = dataJS.structure[0].derobjects[0].derobject//[0].maindoc[0]\n  }\n  catch{}\n  console.log(\"IMAGE\");\n  console.log(content.img);\n\n  details[0].push(content);\n  return details;\n};\n\n\nconst getInfoDetails = (objectID) => {\n  var req = API_URL+'/objects/'+objectID;\n  return axios.get(req, {headers:authHeader}).then((response)=>{\n        \n        var xml2js = require('react-native-xml2js');\n        var parser = new xml2js.Parser();\n        var dataJS='';\n        parser.parseString(response.data, function (err, detailJSON) {\n            dataJS = detailJSON.mycoreobject;\n        });\n        //console.log(\"ALL KEYS\");\n        //console.log(dataJS);\n        //console.log(Object.keys(dataJS.structure));\n        //console.log(dataJS.structure['0']);\n        \n        var keys = Object.keys(dataJS.structure['0']);\n\n        if(keys.includes('children')){\n            var contentG = contentDetailGemarkung(dataJS);\n            //console.log(\"RUECKWERTE\");\n            //console.log(contentG);\n            return contentG\n        }\n        else{\n          //Flurname\n            \n            var contentF = contentDetailFlurname(dataJS);\n            return contentF\n        }\n        //console.log(dataJS);\n        //var content = contentDetails(dataJS)\n      \n  });\n};\n\nexport default {\n  searchInfoQuery,\n  getInfoDetails\n};","/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reducers/auth.js",["415"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-flurnamen/src/reducers/message.js",["416"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/index.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/App.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reportWebVitals.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/store.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Login.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Project.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Flurnamen.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Register.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Home.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Profile.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Erfassung.js",["417"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Gallery.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Search.js",["418","419","420","421","422","423"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Literatur.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Datenbank.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/actions/auth.js",["424","425"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/actions/message.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/helpers/history.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reducers/index.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Accordion.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/Modal.js",["426","427","428"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/actions/types.js",[],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/components/apis/get.service.js",["429","430","431","432","433","434","435","436"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/services/auth.service.js",["437","438","439"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reducers/auth.js",["440"],"/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/src/reducers/message.js",["441"],{"ruleId":"442","replacedBy":"443"},{"ruleId":"444","replacedBy":"445"},{"ruleId":"446","severity":1,"message":"447","line":3,"column":33,"nodeType":"448","messageId":"449","endLine":3,"endColumn":37},{"ruleId":"446","severity":1,"message":"450","line":5,"column":21,"nodeType":"448","messageId":"449","endLine":5,"endColumn":35},{"ruleId":"446","severity":1,"message":"451","line":6,"column":56,"nodeType":"448","messageId":"449","endLine":6,"endColumn":63},{"ruleId":"446","severity":1,"message":"452","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":25},{"ruleId":"446","severity":1,"message":"453","line":1,"column":27,"nodeType":"448","messageId":"449","endLine":1,"endColumn":36},{"ruleId":"446","severity":1,"message":"454","line":1,"column":38,"nodeType":"448","messageId":"449","endLine":1,"endColumn":47},{"ruleId":"446","severity":1,"message":"455","line":9,"column":8,"nodeType":"448","messageId":"449","endLine":9,"endColumn":19},{"ruleId":"446","severity":1,"message":"456","line":12,"column":3,"nodeType":"448","messageId":"449","endLine":12,"endColumn":9},{"ruleId":"446","severity":1,"message":"456","line":14,"column":3,"nodeType":"448","messageId":"449","endLine":14,"endColumn":9},{"ruleId":"457","severity":1,"message":"458","line":15,"column":22,"nodeType":"459","messageId":"460","endLine":15,"endColumn":24},{"ruleId":"457","severity":1,"message":"458","line":43,"column":24,"nodeType":"459","messageId":"460","endLine":43,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":27,"column":1,"nodeType":"463","endLine":30,"endColumn":3},{"ruleId":"446","severity":1,"message":"464","line":1,"column":8,"nodeType":"448","messageId":"449","endLine":1,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":81,"column":15,"nodeType":"459","messageId":"460","endLine":81,"endColumn":17},{"ruleId":"457","severity":1,"message":"458","line":81,"column":47,"nodeType":"459","messageId":"460","endLine":81,"endColumn":49},{"ruleId":"461","severity":1,"message":"462","line":128,"column":1,"nodeType":"463","endLine":132,"endColumn":3},{"ruleId":"461","severity":1,"message":"465","line":5,"column":1,"nodeType":"463","endLine":18,"endColumn":2},{"ruleId":"461","severity":1,"message":"465","line":17,"column":3,"nodeType":"463","endLine":51,"endColumn":4},{"ruleId":"446","severity":1,"message":"466","line":2,"column":10,"nodeType":"448","messageId":"449","endLine":2,"endColumn":16},{"ruleId":"446","severity":1,"message":"466","line":2,"column":10,"nodeType":"448","messageId":"449","endLine":2,"endColumn":16},{"ruleId":"446","severity":1,"message":"466","line":1,"column":10,"nodeType":"448","messageId":"449","endLine":1,"endColumn":16},{"ruleId":"446","severity":1,"message":"467","line":127,"column":7,"nodeType":"448","messageId":"449","endLine":127,"endColumn":21},{"ruleId":"457","severity":1,"message":"458","line":131,"column":16,"nodeType":"459","messageId":"460","endLine":131,"endColumn":18},{"ruleId":"457","severity":1,"message":"468","line":197,"column":13,"nodeType":"459","messageId":"460","endLine":197,"endColumn":15},{"ruleId":"446","severity":1,"message":"469","line":4,"column":10,"nodeType":"448","messageId":"449","endLine":4,"endColumn":22},{"ruleId":"446","severity":1,"message":"456","line":4,"column":40,"nodeType":"448","messageId":"449","endLine":4,"endColumn":46},{"ruleId":"457","severity":1,"message":"458","line":36,"column":33,"nodeType":"459","messageId":"460","endLine":36,"endColumn":35},{"ruleId":"470","severity":1,"message":"471","line":49,"column":66,"nodeType":"472","messageId":"473","endLine":69,"endColumn":6},{"ruleId":"446","severity":1,"message":"474","line":115,"column":17,"nodeType":"448","messageId":"449","endLine":115,"endColumn":25},{"ruleId":"461","severity":1,"message":"462","line":130,"column":1,"nodeType":"463","endLine":133,"endColumn":3},{"ruleId":"446","severity":1,"message":"475","line":3,"column":8,"nodeType":"448","messageId":"449","endLine":3,"endColumn":16},{"ruleId":"446","severity":1,"message":"476","line":17,"column":9,"nodeType":"448","messageId":"449","endLine":17,"endColumn":13},{"ruleId":"446","severity":1,"message":"477","line":18,"column":9,"nodeType":"448","messageId":"449","endLine":18,"endColumn":14},{"ruleId":"446","severity":1,"message":"478","line":21,"column":12,"nodeType":"448","messageId":"449","endLine":21,"endColumn":19},{"ruleId":"446","severity":1,"message":"479","line":21,"column":21,"nodeType":"448","messageId":"449","endLine":21,"endColumn":31},{"ruleId":"480","severity":1,"message":"481","line":52,"column":8,"nodeType":"482","endLine":52,"endColumn":10,"suggestions":"483"},{"ruleId":"446","severity":1,"message":"484","line":98,"column":7,"nodeType":"448","messageId":"449","endLine":98,"endColumn":17},{"ruleId":"442","replacedBy":"485"},{"ruleId":"444","replacedBy":"486"},{"ruleId":"457","severity":1,"message":"458","line":37,"column":33,"nodeType":"459","messageId":"460","endLine":37,"endColumn":35},{"ruleId":"446","severity":1,"message":"466","line":1,"column":10,"nodeType":"448","messageId":"449","endLine":1,"endColumn":16},{"ruleId":"446","severity":1,"message":"487","line":9,"column":35,"nodeType":"448","messageId":"449","endLine":9,"endColumn":41},{"ruleId":"457","severity":1,"message":"458","line":155,"column":26,"nodeType":"459","messageId":"460","endLine":155,"endColumn":28},{"ruleId":"457","severity":1,"message":"458","line":162,"column":16,"nodeType":"459","messageId":"460","endLine":162,"endColumn":18},{"ruleId":"446","severity":1,"message":"488","line":171,"column":5,"nodeType":"448","messageId":"449","endLine":171,"endColumn":17},{"ruleId":"489","severity":1,"message":"490","line":315,"column":9,"nodeType":"491","endLine":315,"endColumn":83},{"ruleId":"457","severity":1,"message":"458","line":25,"column":22,"nodeType":"459","messageId":"460","endLine":25,"endColumn":24},{"ruleId":"457","severity":1,"message":"458","line":53,"column":24,"nodeType":"459","messageId":"460","endLine":53,"endColumn":26},{"ruleId":"446","severity":1,"message":"492","line":26,"column":9,"nodeType":"448","messageId":"449","endLine":26,"endColumn":10},{"ruleId":"446","severity":1,"message":"493","line":48,"column":13,"nodeType":"448","messageId":"449","endLine":48,"endColumn":19},{"ruleId":"446","severity":1,"message":"494","line":132,"column":12,"nodeType":"448","messageId":"449","endLine":132,"endColumn":19},{"ruleId":"461","severity":1,"message":"462","line":27,"column":1,"nodeType":"463","endLine":30,"endColumn":3},{"ruleId":"442","replacedBy":"495"},{"ruleId":"444","replacedBy":"496"},{"ruleId":"457","severity":1,"message":"458","line":84,"column":15,"nodeType":"459","messageId":"460","endLine":84,"endColumn":17},{"ruleId":"457","severity":1,"message":"458","line":84,"column":47,"nodeType":"459","messageId":"460","endLine":84,"endColumn":49},{"ruleId":"461","severity":1,"message":"462","line":131,"column":1,"nodeType":"463","endLine":135,"endColumn":3},{"ruleId":"446","severity":1,"message":"497","line":9,"column":7,"nodeType":"448","messageId":"449","endLine":9,"endColumn":11},{"ruleId":"457","severity":1,"message":"468","line":78,"column":27,"nodeType":"459","messageId":"460","endLine":78,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":105,"column":14,"nodeType":"459","messageId":"460","endLine":105,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":114,"column":14,"nodeType":"459","messageId":"460","endLine":114,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":123,"column":14,"nodeType":"459","messageId":"460","endLine":123,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":132,"column":14,"nodeType":"459","messageId":"460","endLine":132,"endColumn":16},{"ruleId":"470","severity":1,"message":"498","line":171,"column":60,"nodeType":"499","messageId":"473","endLine":220,"endColumn":10},{"ruleId":"461","severity":1,"message":"462","line":368,"column":1,"nodeType":"463","endLine":371,"endColumn":3},{"ruleId":"461","severity":1,"message":"465","line":17,"column":3,"nodeType":"463","endLine":51,"endColumn":4},{"ruleId":"461","severity":1,"message":"465","line":5,"column":1,"nodeType":"463","endLine":18,"endColumn":2},{"ruleId":"457","severity":1,"message":"458","line":37,"column":33,"nodeType":"459","messageId":"460","endLine":37,"endColumn":35},{"ruleId":"446","severity":1,"message":"466","line":1,"column":10,"nodeType":"448","messageId":"449","endLine":1,"endColumn":16},{"ruleId":"446","severity":1,"message":"487","line":9,"column":35,"nodeType":"448","messageId":"449","endLine":9,"endColumn":41},{"ruleId":"457","severity":1,"message":"458","line":155,"column":26,"nodeType":"459","messageId":"460","endLine":155,"endColumn":28},{"ruleId":"457","severity":1,"message":"458","line":162,"column":16,"nodeType":"459","messageId":"460","endLine":162,"endColumn":18},{"ruleId":"446","severity":1,"message":"488","line":171,"column":5,"nodeType":"448","messageId":"449","endLine":171,"endColumn":17},{"ruleId":"489","severity":1,"message":"490","line":315,"column":9,"nodeType":"491","endLine":315,"endColumn":83},{"ruleId":"457","severity":1,"message":"458","line":25,"column":22,"nodeType":"459","messageId":"460","endLine":25,"endColumn":24},{"ruleId":"457","severity":1,"message":"458","line":53,"column":24,"nodeType":"459","messageId":"460","endLine":53,"endColumn":26},{"ruleId":"446","severity":1,"message":"492","line":26,"column":9,"nodeType":"448","messageId":"449","endLine":26,"endColumn":10},{"ruleId":"446","severity":1,"message":"493","line":48,"column":13,"nodeType":"448","messageId":"449","endLine":48,"endColumn":19},{"ruleId":"446","severity":1,"message":"494","line":132,"column":12,"nodeType":"448","messageId":"449","endLine":132,"endColumn":19},{"ruleId":"446","severity":1,"message":"497","line":9,"column":7,"nodeType":"448","messageId":"449","endLine":9,"endColumn":11},{"ruleId":"457","severity":1,"message":"468","line":78,"column":27,"nodeType":"459","messageId":"460","endLine":78,"endColumn":29},{"ruleId":"457","severity":1,"message":"458","line":105,"column":14,"nodeType":"459","messageId":"460","endLine":105,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":114,"column":14,"nodeType":"459","messageId":"460","endLine":114,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":123,"column":14,"nodeType":"459","messageId":"460","endLine":123,"endColumn":16},{"ruleId":"457","severity":1,"message":"458","line":132,"column":14,"nodeType":"459","messageId":"460","endLine":132,"endColumn":16},{"ruleId":"470","severity":1,"message":"498","line":171,"column":60,"nodeType":"499","messageId":"473","endLine":220,"endColumn":10},{"ruleId":"461","severity":1,"message":"462","line":368,"column":1,"nodeType":"463","endLine":371,"endColumn":3},{"ruleId":"457","severity":1,"message":"458","line":84,"column":15,"nodeType":"459","messageId":"460","endLine":84,"endColumn":17},{"ruleId":"457","severity":1,"message":"458","line":84,"column":47,"nodeType":"459","messageId":"460","endLine":84,"endColumn":49},{"ruleId":"461","severity":1,"message":"462","line":131,"column":1,"nodeType":"463","endLine":135,"endColumn":3},{"ruleId":"461","severity":1,"message":"465","line":17,"column":3,"nodeType":"463","endLine":51,"endColumn":4},{"ruleId":"461","severity":1,"message":"465","line":5,"column":1,"nodeType":"463","endLine":18,"endColumn":2},"no-native-reassign",["500"],"no-negated-in-lhs",["501"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'MDBNavbarBrand' is defined but never used.","'MDBIcon' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","'UserService' is defined but never used.","'MDBBtn' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","Unexpected default export of anonymous function","'render' is defined but never used.","'suggestResults' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'MDBContainer' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'childID'.","ArrowFunctionExpression","unsafeRefs","'contentG' is assigned a value but never used.","'ReactDOM' is defined but never used.","'resp' is assigned a value but never used.","'title' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'objectID.value'. Either include it or remove the dependency array.","ArrayExpression",["502"],"'RowDetails' is assigned a value but never used.",["500"],["501"],"'MDBRow' is defined but never used.","'filterSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'n' is assigned a value but never used.","'getRes' is assigned a value but never used.","'Example' is defined but never used.",["500"],["501"],"'keys' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'childRes'.","FunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},"Update the dependencies array to be: [objectID.value]",{"range":"505","text":"506"},[1441,1443],"[objectID.value]"]