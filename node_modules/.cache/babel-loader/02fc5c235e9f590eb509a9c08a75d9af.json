{"ast":null,"code":"var _jsxFileName = \"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Search.js\";\nimport { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchAx from '../components/SearchAx';\nimport { MDBCol, MDBFormInline, MDBBtn, MDBIcon } from \"mdbreact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar finalIDs = [];\nvar getIDs = {\n  method: 'get',\n  url: 'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%20%20%20%20%20%20%20%20%20%2033.1)&wt=json',\n  headers: {\n    'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n  }\n};\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      });\n    };\n\n    this.state = {\n      query: \"\",\n      idList: [],\n      results: []\n    };\n  }\n\n  async componentDidMount() {\n    //first request\n    await axios(getIDs).then(response => {\n      const data = response.data.response.docs; //docs is a list\n\n      for (var i = 0; i < data.length; i++) {\n        var new_data = {\n          'id': data[i]['id'],\n          'link': data[i]['link'][0],\n          'ArchFile_class_001_Label': data[i]['ArchFile_class_001_Label'][1],\n          'iviewFile': data[i]['iviewFile']\n        };\n        finalIDs.push(new_data);\n      }\n\n      this.setState({\n        idList: finalIDs\n      });\n    }).catch(error => {\n      console.log(error);\n    }); //others requests to get more information about objects\n\n    for (var i in [0, 1]) {\n      var objID = finalIDs[i]['link'];\n      var getInfo = {\n        method: 'get',\n        url: 'https://collections.thulb.uni-jena.de/api/v1/objects/' + objID,\n        headers: {\n          'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n        }\n      };\n      await axios(getInfo).then(response => {\n        let parser = new DOMParser();\n        let xml = parser.parseFromString(response.data, \"text/xml\");\n        console.log(xml.getElementsByName('mycoreobject'));\n        /*\n        var xml2js = require('xml2js');\n        fs = require('fs');\n        var parseString = require('xml2js').parseString;\n         fs.readFile('../storage/epg/epg.xml', function(err, data) {\n        var data = data.toString().replace(\"\\ufeff\", \"\");\n        parseString(data, function (err, result) {\n        console.dir(result);\n        });\n        });\n        */\n\n        xml2js.parseString(xml, (err, result) => {\n          if (err) {\n            throw err;\n          } // `result` is a JavaScript object\n          // convert it to a JSON string\n\n\n          const json = JSON.stringify(result, null, 4); // log JSON string\n\n          console.log(json);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search\",\n      children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group md-form form-sm form-1 pl-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text green lighten-3\",\n              id: \"basic-text1\",\n              children: /*#__PURE__*/_jsxDEV(MDBIcon, {\n                className: \"text-white\",\n                icon: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control my-0 py-1\",\n            ref: input => this.search = input,\n            onChange: this.handleInputChange,\n            type: \"text\",\n            placeholder: \"Flurnamen suchen...\",\n            \"aria-label\": \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), this.state.idList.map((item, index) => /*#__PURE__*/_jsxDEV(ResultList, { ...item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 49\n      }, this)), /*#__PURE__*/_jsxDEV(SearchAx, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ResultList = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n    children: \"ID: \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 8\n  }, this), \" \", props.link]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 5\n}, this);\n\n_c = ResultList;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultList\");","map":{"version":3,"sources":["/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Search.js"],"names":["render","React","Component","axios","SearchAx","MDBCol","MDBFormInline","MDBBtn","MDBIcon","finalIDs","getIDs","method","url","headers","Search","constructor","props","handleInputChange","setState","query","search","value","state","idList","results","componentDidMount","then","response","data","docs","i","length","new_data","push","catch","error","console","log","objID","getInfo","parser","DOMParser","xml","parseFromString","getElementsByName","xml2js","parseString","err","result","json","JSON","stringify","input","map","item","index","ResultList","link"],"mappings":"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","sourcesContent":["import { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchAx from '../components/SearchAx';\n\n\nimport { MDBCol, MDBFormInline, MDBBtn, MDBIcon} from \"mdbreact\";\n\nvar finalIDs=[]\n\nvar getIDs = {\n    method: 'get',\n    url: 'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%20%20%20%20%20%20%20%20%20%2033.1)&wt=json',\n    headers: { \n      'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n    }\n  };\n\nclass Search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        query: \"\",\n        idList: [],\n        results: []\n    };\n  }\n\n  async componentDidMount() {\n    //first request\n    await axios(getIDs).then((response)=>{\n        const data = response.data.response.docs; //docs is a list\n        for (var i = 0; i < data.length; i++)\n        {\n            var new_data={\n                'id':data[i]['id'],\n                'link':data[i]['link'][0],\n                'ArchFile_class_001_Label':data[i]['ArchFile_class_001_Label'][1],\n                'iviewFile':data[i]['iviewFile']\n            }\n            finalIDs.push(new_data)\n        }\n        \n       \n        this.setState({\n            idList:finalIDs\n        });\n      })\n      .catch((error)=>{\n        console.log(error);\n      });\n\n    //others requests to get more information about objects\n    for(var i in [0,1]){\n        \n        var objID = finalIDs[i]['link'];\n        var getInfo={\n            method: 'get',\n            url: 'https://collections.thulb.uni-jena.de/api/v1/objects/'+objID,\n            headers: { \n            'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n            }\n        }\n        await axios(getInfo).then((response)=>{\n            let parser = new DOMParser();\n            let xml = parser.parseFromString(response.data, \"text/xml\");\n            console.log(xml.getElementsByName('mycoreobject'));\n            /*\n            var xml2js = require('xml2js');\n            fs = require('fs');\n            var parseString = require('xml2js').parseString;\n\n            fs.readFile('../storage/epg/epg.xml', function(err, data) {\n            var data = data.toString().replace(\"\\ufeff\", \"\");\n            parseString(data, function (err, result) {\n            console.dir(result);\n            });\n            });\n            */\n            xml2js.parseString(xml, (err, result) => {\n              if(err) {\n                  throw err;\n              }\n          \n              // `result` is a JavaScript object\n              // convert it to a JSON string\n              const json = JSON.stringify(result, null, 4);\n          \n              // log JSON string\n              console.log(json);\n              \n          });\n          })\n          .catch((error)=>{\n            console.log(error);\n          });\n    }\n  }\n  \n  \n\n\n    handleInputChange = () => {\n        this.setState({\n        query: this.search.value\n        })\n    }\n\n  render() {\n\n    return (\n      <div className=\"Search\">\n        \n        <MDBCol>\n            <div className=\"input-group md-form form-sm form-1 pl-0\">\n                <div className=\"input-group-prepend\">\n                <span className=\"input-group-text green lighten-3\" id=\"basic-text1\">\n                    <MDBIcon className=\"text-white\" icon=\"search\" />\n                </span>\n                </div>\n                \n                    <input className=\"form-control my-0 py-1\" \n                        ref={input => this.search = input}\n                        onChange={this.handleInputChange}\n                        type=\"text\" \n                        placeholder=\"Flurnamen suchen...\" \n                        aria-label=\"Search\" />\n            </div>\n            <p>{this.state.query}</p>\n        </MDBCol>\n\n        {this.state.idList.map((item, index) => <ResultList key={index} {...item} />)}\n        <SearchAx/>\n      </div>\n    );\n  }\n\n\n  \n}\n\nconst ResultList=(props)=>(\n    <p><strong>ID: </strong> {props.link}</p>\n);\nexport default Search;"]},"metadata":{},"sourceType":"module"}