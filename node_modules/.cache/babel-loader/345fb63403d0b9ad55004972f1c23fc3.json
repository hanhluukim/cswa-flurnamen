{"ast":null,"code":"// Generated by CoffeeScript 1.10.0\n(function () {\n  var XMLCData,\n      XMLComment,\n      XMLDTDAttList,\n      XMLDTDElement,\n      XMLDTDEntity,\n      XMLDTDNotation,\n      XMLDeclaration,\n      XMLDocType,\n      XMLElement,\n      XMLProcessingInstruction,\n      XMLRaw,\n      XMLStringWriter,\n      XMLText,\n      XMLWriterBase,\n      extend = function extend(child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLElement = require('./XMLElement');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = function (superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function (doc) {\n      var child, i, len, r, ref;\n      r = '';\n      ref = doc.children;\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n\n        r += function () {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n\n            default:\n              return this.element(child, 0);\n          }\n        }.call(this);\n      }\n\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function (att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function (node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function (node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function (node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n\n      r += '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function (node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n\n          r += function () {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }.call(this);\n        }\n\n        r += ']';\n      }\n\n      r += '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function (node, level) {\n      var att, child, i, len, name, r, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n\n      if (node.children.length === 0 || node.children.every(function (e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        r += '>' + this.newline;\n        ref1 = node.children;\n\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n\n          r += function () {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }.call(this);\n        }\n\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function (node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n\n      r += '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function (node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function (node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function (node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n\n      r += '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function (node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function (node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n\n      if (node.pe) {\n        r += ' %';\n      }\n\n      r += ' ' + node.name;\n\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n\n      r += '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function (node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n\n      r += '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function (node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function (node, level) {\n      level || (level = 0);\n\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n  }(XMLWriterBase);\n}).call(this);","map":{"version":3,"sources":["/home/miss-luu/Downloads/0_Studium/0_web_client/cswa/cswa-flurnamen/node_modules/react-native-xml2js/node_modules/xmlbuilder/lib/XMLStringWriter.js"],"names":["XMLCData","XMLComment","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDeclaration","XMLDocType","XMLElement","XMLProcessingInstruction","XMLRaw","XMLStringWriter","XMLText","XMLWriterBase","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","options","document","doc","i","len","r","ref","children","length","declaration","docType","comment","processingInstruction","element","pretty","slice","newline","attribute","att","name","value","cdata","node","level","space","text","version","encoding","standalone","root","pubID","sysID","dtdAttList","dtdElement","dtdEntity","dtdNotation","Error","ref1","attributes","every","e","allowEmpty","raw","target","elementName","attributeName","attributeType","defaultValueType","defaultValue","pe","nData","openNode","rootNodeName","closeNode"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.10.0\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, r, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        r += '>' + this.newline;\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}