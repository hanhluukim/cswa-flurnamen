{"ast":null,"code":"// Generated by CoffeeScript 1.10.0\n(function () {\n  var XMLWriterBase,\n      hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = function () {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n      }\n\n      ref4 = options.writer || {};\n\n      for (key in ref4) {\n        if (!hasProp.call(ref4, key)) continue;\n        value = ref4[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function (options) {\n      var key, ref, value;\n      options || (options = {});\n\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n      }\n\n      ref = options.writer || {};\n\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function (level) {\n      if (this.pretty) {\n        return new Array((level || 0) + this.offset + 1).join(this.indent);\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n  }();\n}).call(this);","map":{"version":3,"sources":["/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/node_modules/react-native-xml2js/node_modules/xmlbuilder/lib/XMLWriterBase.js"],"names":["XMLWriterBase","hasProp","hasOwnProperty","module","exports","options","key","ref","ref1","ref2","ref3","ref4","value","pretty","allowEmpty","indent","newline","offset","writer","call","prototype","set","space","level","Array","join"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.10.0\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n      }\n      ref4 = options.writer || {};\n      for (key in ref4) {\n        if (!hasProp.call(ref4, key)) continue;\n        value = ref4[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n      }\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      if (this.pretty) {\n        return new Array((level || 0) + this.offset + 1).join(this.indent);\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}