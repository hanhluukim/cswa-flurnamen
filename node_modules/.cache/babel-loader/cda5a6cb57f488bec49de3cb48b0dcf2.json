{"ast":null,"code":"var _jsxFileName = \"/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Search.js\";\nimport { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchAx from '../components/SearchAx';\nimport Suggestions from '../components/Suggestion';\nimport { MDBCol, MDBFormInline, MDBBtn, MDBIcon } from \"mdbreact\";\nimport GetService from '../components/apis/get.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar foundObjects = [];\nvar requestGetIDs = {\n  method: 'get',\n  url: 'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%2033.1)%20AND%20objectType:%22cbu%22&rows=50&wt=json',\n  //'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%20%20%20%20%20%20%20%20%20%2033.1)&wt=json',\n  headers: {\n    'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n  }\n};\n\nclass Search extends Component {\n  //define the constructure of component Search\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value,\n        //based on query will rall results be filtered\n        filterBestand: this.state.results.filter(bestand => bestand['title'].toLowerCase().includes(this.state.query.toLowerCase()))\n      });\n    };\n\n    this.getResultsForQuery = event => {\n      const title = this.state.query;\n      console.log(title);\n      var resp = GetService.searchInfoQuery(title);\n      console.log(resp);\n    };\n\n    const default_query = \"\";\n    this.state = {\n      query: default_query,\n      idList: [],\n      results: [],\n      filterBestand: [],\n      all: 0,\n      //parameters for search of query\n      isLoadedForQuery: false,\n      resultsForQuery: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async componentDidMount() {\n    //first request to get all IDs\n    await axios(requestGetIDs).then(response => {\n      //get number of all results\n      this.setState({\n        all: response.data.response.numFound\n      });\n      const data = response.data.response.docs; //docs is a list\n\n      foundObjects = GetService.getResultList(data);\n      this.setState({\n        results: foundObjects\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(\"First Call for Suggestions: loaded\");\n  } //metadata[0][\"def.title\"][0].title[0][\"_\"]  \n\n\n  render() {\n    //adding number of results\n    var isFound = this.state.filterBestand.length;\n    var all = this.state.all; //var isLoaded = this.state.isLoadedForQuery;\n\n    let suggestResults;\n    let showResults;\n\n    if (isFound > 1) {\n      suggestResults = /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Vorschlagen von \", all, \" Objekten \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }, this);\n    } else {\n      suggestResults = /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Vorschlag von \", all, \" Objekten\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 22\n      }, this);\n    } //render HTML\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search\",\n      children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group md-form form-sm form-1 pl-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text green lighten-3\",\n              id: \"basic-text1\",\n              children: /*#__PURE__*/_jsxDEV(MDBIcon, {\n                className: \"text-white\",\n                icon: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control my-0 py-1\",\n            ref: input => this.search = input,\n            onChange: this.handleInputChange //onKeyPress={event=>event.key==\"Enter\" &&this.getResultsForQuery}\n            ,\n            type: \"text\",\n            placeholder: \"Flurnamen suchen...\",\n            \"aria-label\": \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.getResultsForQuery,\n            children: \"Suchen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), suggestResults, this.state.filterBestand.slice(0, 5).map((item, index) => /*#__PURE__*/_jsxDEV(ResultList, { ...item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 67\n      }, this)), showResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ResultList = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: props['title']\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 142,\n  columnNumber: 5\n}, this);\n\n_c = ResultList;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultList\");","map":{"version":3,"sources":["/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/components/Search.js"],"names":["render","React","Component","axios","SearchAx","Suggestions","MDBCol","MDBFormInline","MDBBtn","MDBIcon","GetService","foundObjects","requestGetIDs","method","url","headers","Search","constructor","props","handleInputChange","setState","query","search","value","filterBestand","state","results","filter","bestand","toLowerCase","includes","getResultsForQuery","event","title","console","log","resp","searchInfoQuery","default_query","idList","all","isLoadedForQuery","resultsForQuery","bind","componentDidMount","then","response","data","numFound","docs","getResultList","catch","error","isFound","length","suggestResults","showResults","input","slice","map","item","index","ResultList"],"mappings":"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","sourcesContent":["import { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchAx from '../components/SearchAx';\nimport Suggestions from '../components/Suggestion';\n\nimport { MDBCol, MDBFormInline, MDBBtn, MDBIcon} from \"mdbreact\";\nimport GetService from '../components/apis/get.service';\n\nvar foundObjects=[]\n\n\n\nvar requestGetIDs = {\n    method: 'get',\n    url: 'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%2033.1)%20AND%20objectType:%22cbu%22&rows=50&wt=json',\n    //'https://collections.thulb.uni-jena.de/api/v1/search?q=+cbuUnitTypes.actual:(33.0%20%20%20%20%20%20%20%20%20%2033.1)&wt=json',\n    headers: { \n      'Authorization': 'Basic cmVzdGFwaS1yZWFkOmRlMjgxMjMyOGIzYTZmODc1NDIyYjM4NzZlMDJiZTM3'\n    }\n  };\n\nclass Search extends Component {\n\n  //define the constructure of component Search\n\n  constructor(props) {\n    super(props);\n\n    const default_query=\"\";\n\n    this.state = {\n        query: default_query,\n        idList: [],\n        results: [],\n        filterBestand:[],\n        all: 0,\n        //parameters for search of query\n        isLoadedForQuery: false,\n        resultsForQuery: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    \n  }\n\n  async componentDidMount() {\n    //first request to get all IDs\n    await axios(requestGetIDs).then((response)=>{\n        //get number of all results\n        this.setState({\n          all: response.data.response.numFound\n        })\n\n        const data = response.data.response.docs; //docs is a list\n        foundObjects= GetService.getResultList(data)\n\n        \n        this.setState({\n            results:foundObjects\n        });\n      })\n      .catch((error)=>{\n        console.log(error);\n      });\n      console.log(\"First Call for Suggestions: loaded\");\n  }\n\n\n\n//metadata[0][\"def.title\"][0].title[0][\"_\"]  \n  handleInputChange = () => {\n    \n      this.setState({\n      query: this.search.value,\n      //based on query will rall results be filtered\n      filterBestand:this.state.results.filter((bestand)=>bestand['title'].toLowerCase().includes(this.state.query.toLowerCase()))\n      })\n\n  }\n\n  getResultsForQuery =(event) =>{\n    const title = this.state.query;\n    console.log(title);\n    var resp = GetService.searchInfoQuery(title);\n    console.log(resp);\n  }\n\n  render() {\n    //adding number of results\n    var isFound = this.state.filterBestand.length;\n    var all = this.state.all;\n    //var isLoaded = this.state.isLoadedForQuery;\n\n    let suggestResults;\n    let showResults;\n\n    if(isFound>1){\n      suggestResults=<h6>Vorschlagen von {all} Objekten </h6>\n\n    }\n    else{\n      suggestResults=<h6>Vorschlag von {all} Objekten</h6>\n    }\n\n    //render HTML\n    return (\n      <div className=\"Search\">\n        \n        <MDBCol>\n            <div className=\"input-group md-form form-sm form-1 pl-0\">\n                <div className=\"input-group-prepend\">\n                <span className=\"input-group-text green lighten-3\" id=\"basic-text1\">\n                    <MDBIcon className=\"text-white\" icon=\"search\" />\n                </span>\n                </div>\n                  \n                    <input className=\"form-control my-0 py-1\" \n                        ref={input => this.search = input}\n                        onChange={this.handleInputChange}\n                        //onKeyPress={event=>event.key==\"Enter\" &&this.getResultsForQuery}\n                        type=\"text\" \n                        placeholder=\"Flurnamen suchen...\" \n                        aria-label=\"Search\" />\n                    <button onClick={this.getResultsForQuery}>Suchen</button>\n                 \n            </div>\n        </MDBCol>\n        \n        {suggestResults}\n        {this.state.filterBestand.slice(0,5).map((item, index) => <ResultList key={index} {...item} />)}\n        \n        {showResults}\n      </div>\n    );\n  }\n\n\n  \n}\n\nconst ResultList=(props)=>(\n    <p>\n    {props['title']}\n    </p>\n);\nexport default Search;"]},"metadata":{},"sourceType":"module"}