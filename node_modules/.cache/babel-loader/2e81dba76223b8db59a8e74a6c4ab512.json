{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst register = (username, email, password) => {\n  /*\n  var data={auth: 'Hanh', message: 'Hanh'};\n  console.log(JSON.stringify(data));\n  var myBlob = new Blob([JSON.stringify(data)], {type : 'application/json'});\n  var myBlob = new Blob();\n  var init = { \"status\" : 200 , \"statusText\" : \"SuperSmashingGreat!\" };\n  var myResponse = new Response(myBlob,init);\n  */\n  var test_response = {\n    // `data` is the response that was provided by the server\n    data: {\n      auth: 'Hanh',\n      message: 'Hanh'\n    },\n    // `status` is the HTTP status code from the server response\n    status: 200,\n    // `statusText` is the HTTP status message from the server response\n    statusText: 'OK',\n    // `headers` the headers that the server responded with\n    // All header names are lower cased\n    headers: {\n      'Content-Type': 'text/json'\n    },\n    // `config` is the config that was provided to `axios` for the request\n    config: {},\n    // `request` is the request that generated this response\n    // It is the last ClientRequest instance in node.js (in redirects)\n    // and an XMLHttpRequest instance the browser\n    request: {}\n  };\n  console.log(\"auth.service:\");\n  console.log(test_response);\n  return test_response;\n  /*\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n  */\n};\n\nconst login = (username, password) => {\n  return axios.post(API_URL + \"signin\", {\n    username,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout\n};","map":{"version":3,"sources":["/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/src/services/auth.service.js"],"names":["axios","API_URL","register","username","email","password","test_response","data","auth","message","status","statusText","headers","config","request","console","log","login","post","then","response","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+B;AAE9C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,MAAIC,aAAa,GAAC;AAChB;AACAC,IAAAA,IAAI,EACF;AAACC,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAHc;AAMhB;AACAC,IAAAA,MAAM,EAAE,GAPQ;AAShB;AACAC,IAAAA,UAAU,EAAE,IAVI;AAYhB;AACA;AACAC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAdO;AAgBhB;AACAC,IAAAA,MAAM,EAAE,EAjBQ;AAmBhB;AACA;AACA;AACAC,IAAAA,OAAO,EAAE;AAtBO,GAAlB;AAyBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AAEA,SAAOA,aAAP;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AAEC,CA/CD;;AAiDA,MAAMW,KAAK,GAAG,CAACd,QAAD,EAAWE,QAAX,KAAwB;AACpC,SAAOL,KAAK,CACTkB,IADI,CACCjB,OAAO,GAAG,QADX,EACqB;AACxBE,IAAAA,QADwB;AAExBE,IAAAA;AAFwB,GADrB,EAKJc,IALI,CAKEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACb,IAAT,CAAcc,WAAlB,EAA+B;AAC7BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACb,IAAxB,CAA7B;AACD;;AAED,WAAOa,QAAQ,CAACb,IAAhB;AACD,GAXI,CAAP;AAYD,CAbD;;AAeA,MAAMmB,MAAM,GAAG,MAAM;AACnBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,eAAe;AACbzB,EAAAA,QADa;AAEbe,EAAAA,KAFa;AAGbS,EAAAA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst register = (username, email, password) => {\n\n  /*\n  var data={auth: 'Hanh', message: 'Hanh'};\n  console.log(JSON.stringify(data));\n  var myBlob = new Blob([JSON.stringify(data)], {type : 'application/json'});\n  var myBlob = new Blob();\n  var init = { \"status\" : 200 , \"statusText\" : \"SuperSmashingGreat!\" };\n  var myResponse = new Response(myBlob,init);\n  */\n  var test_response={\n    // `data` is the response that was provided by the server\n    data: \n      {auth: 'Hanh', message: 'Hanh'}\n    ,\n   \n    // `status` is the HTTP status code from the server response\n    status: 200,\n   \n    // `statusText` is the HTTP status message from the server response\n    statusText: 'OK',\n   \n    // `headers` the headers that the server responded with\n    // All header names are lower cased\n    headers: {'Content-Type': 'text/json'},\n   \n    // `config` is the config that was provided to `axios` for the request\n    config: {},\n   \n    // `request` is the request that generated this response\n    // It is the last ClientRequest instance in node.js (in redirects)\n    // and an XMLHttpRequest instance the browser\n    request: {}\n  };\n  \n  console.log(\"auth.service:\");\n  console.log(test_response);\n\n  return test_response;\n  /*\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n  */\n  \n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};"]},"metadata":{},"sourceType":"module"}