{"ast":null,"code":"// Generated by CoffeeScript 1.10.0\n(function () {\n  var XMLAttribute,\n      XMLElement,\n      XMLNode,\n      isFunction,\n      isObject,\n      ref,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n  XMLNode = require('./XMLNode');\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = function (superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function () {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n\n      clonedSelf.children = [];\n      this.children.forEach(function (child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function (name, value) {\n      var attName, attValue;\n\n      if (name != null) {\n        name = name.valueOf();\n      }\n\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n\n        if (!this.options.skipNullAttributes || value != null) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function (name) {\n      var attName, i, len;\n\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n\n      name = name.valueOf();\n\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n\n      return this;\n    };\n\n    XMLElement.prototype.toString = function (options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function (name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function (name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"sources":["/home/miss-luu/Downloads/0_Studium/0_web_client/react-redux-hooks-jwt-auth/node_modules/react-native-xml2js/node_modules/xmlbuilder/lib/XMLElement.js"],"names":["XMLAttribute","XMLElement","XMLNode","isFunction","isObject","ref","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","name","attributes","Error","stringify","eleName","attribute","isDocument","isRoot","documentObject","rootObject","clone","att","attName","clonedSelf","ref1","Object","create","children","forEach","clonedChild","push","value","attValue","valueOf","apply","options","skipNullAttributes","removeAttribute","i","len","Array","isArray","length","toString","writer","set","element","a"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.10.0\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}