{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_MESSAGE } from \"./types\";\nimport AuthService from \"../services/auth.service\";\nexport const register = (username, email, password) => dispatch => {\n  var response = AuthService.register(username, email, password);\n  console.log(response);\n\n  if (response.status == 200) {\n    dispatch({\n      type: REGISTER_SUCCESS\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.resolve();\n  } else {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message\n    });\n    return Promise.reject();\n  }\n};\nexport const login = (username, password) => dispatch => {\n  var resp = AuthService.login(username, password);\n\n  if (resp.data.message == \"success\") {\n    console.log(\"Action\");\n    console.log(resp.data.auth.user);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: {\n        user: resp.data.auth.user\n      }\n    });\n    return Promise.resolve();\n  } else {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch({\n      type: SET_MESSAGE,\n      payload: resp.data.message\n    });\n    return Promise.reject();\n  }\n\n  ;\n};\nexport const logout = () => dispatch => {\n  AuthService.logout();\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/miss-luu/Downloads/0_Studium/0_web_client/cswa-flurnamen/react-redux-hooks-jwt-auth/src/actions/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","register","username","email","password","dispatch","response","console","log","status","type","payload","data","message","Promise","resolve","reject","login","resp","auth","user","logout"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,WANF,QAOO,SAPP;AASA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAAgCC,QAAD,IAAc;AACnE,MAAIC,QAAQ,GAAGN,WAAW,CAACC,QAAZ,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsCC,QAAtC,CAAf;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,MAAIA,QAAQ,CAACG,MAAT,IAAiB,GAArB,EAAyB;AACvBJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAIAW,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEL,QAAQ,CAACM,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAIA,WAAOC,OAAO,CAACC,OAAR,EAAP;AACD,GAVD,MAWI;AACFV,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAIAU,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEL,QAAQ,CAACM,IAAT,CAAcC;AAFhB,KAAD,CAAR;AAIA,WAAOC,OAAO,CAACE,MAAR,EAAP;AACD;AACF,CAzBM;AA2BP,OAAO,MAAMC,KAAK,GAAG,CAACf,QAAD,EAAWE,QAAX,KAAyBC,QAAD,IAAc;AAEzD,MAAIa,IAAI,GAAGlB,WAAW,CAACiB,KAAZ,CAAkBf,QAAlB,EAA4BE,QAA5B,CAAX;;AAEA,MAAIc,IAAI,CAACN,IAAL,CAAUC,OAAV,IAAmB,SAAvB,EAAiC;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAI,CAACN,IAAL,CAAUO,IAAV,CAAeC,IAA3B;AACAf,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEd,aADC;AAEPe,MAAAA,OAAO,EAAE;AAAES,QAAAA,IAAI,EAAEF,IAAI,CAACN,IAAL,CAAUO,IAAV,CAAeC;AAAvB;AAFF,KAAD,CAAR;AAKA,WAAON,OAAO,CAACC,OAAR,EAAP;AAED,GAVD,MAWI;AACFV,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAIAQ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEO,IAAI,CAACN,IAAL,CAAUC;AAFZ,KAAD,CAAR;AAKA,WAAOC,OAAO,CAACE,MAAR,EAAP;AAED;;AAAA;AACF,CA5BM;AA8BP,OAAO,MAAMK,MAAM,GAAG,MAAOhB,QAAD,IAAc;AACxCL,EAAAA,WAAW,CAACqB,MAAZ;AAEAhB,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEZ;AADC,GAAD,CAAR;AAGD,CANM","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n  var response = AuthService.register(username, email, password);\n  console.log(response);\n  if (response.status==200){\n    dispatch({\n      type: REGISTER_SUCCESS,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message,\n    });\n    return Promise.resolve();\n  }\n  else{\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: response.data.message,\n    });\n    return Promise.reject();\n  }\n};\n\nexport const login = (username, password) => (dispatch) => {\n\n  var resp = AuthService.login(username, password);\n\n  if (resp.data.message==\"success\"){\n    console.log(\"Action\");\n    console.log(resp.data.auth.user);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: { user: resp.data.auth.user},\n    });\n\n    return Promise.resolve();\n\n  }\n  else{\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: resp.data.message,\n    });\n\n    return Promise.reject();\n\n  };\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};"]},"metadata":{},"sourceType":"module"}